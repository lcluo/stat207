ssto-63.722
matrix(c(1,2,3,4,5,6),c(3,2))
a=matrix(c(1,2,3,4,5,6),c(3,2))
solve(a)
1.0404*(1+0.087)
pt(0.975,26)
pt(.999,82)
qt(.999,82)
qt(.995,82)
27.048+.448+5.49
5.49+.448
a=5.49+.448
a=a/2
a/(27.048/26)
df(1,28)
pf(1,28)
qf(1,28)
qf(0,1,28)
qf(1,1,28)
qf(0,1,28)
pvalue()
?pvalue
??pvalue
?pf
qf(1-.01,2,26)
sqrt(1.0404*1.087)
sqrt(1.04*1.087)
0.9918-2.055529*1.063445
0.9918+2.055529*1.063445
100-10
77.382-21.818
.753/.98
.753/.9855
install.packages("patchDVI")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
choose(3,2)
choose(4,2)
choose(7,2)*(1/3)^2*(2/3)^5
choose(7,3)*(1/3)^3*(2/3)^4
choose(7,2)
choose(7,3)
choose(7,2)*(2/3)^2*(1/3)^5
choose(7,3)*(2/3)^3*(1/3)^4
e
??e
exp(-0.3)
exp(-0.3)*1.3
exp(-3.125)*(3.125^2/2)
exp(-3.125)*(3.125^3/6)
exp(-3.125)*(3.125^4/24)
0.2145+.2234+.1745
a=exp(-3.125)*(3.125^2/2)
b=exp(-3.125)*(3.125^3/6)
c=exp(-3.125)*(3.125^4/24)
a+b+c
exp(-2)*(28/3)
exp(-2)*(4)
extractAIC(fit, k=log(n))
fit2 = lm(Y~X1+ X2+ X4, data=data)
fds
llfdsf
a=1:3
names(a)=c("a","b","c")
match("a",a)
match("a",names(a))
match("c",names(a))
?sprintf
n <- 1:18
sprintf(paste0("e with %2d digits = %.", n, "g"), n, exp(1))
sprintf("min 10-char string '%10s'",
c("a", "ABC", "and an even longer one"))
sprintf("fuck","you")
sprintf("fuck",c("you"))
sprintf("fuck",c("you","fukc you"))
sprintf("fuck",c("you","fukc youffds"))
sprintf("fuck",c("you","fukc youffds,asd"))
sprintf("fuck",c("you","fukc youffds,asd,"fsd))
sprintf("fuck",c("you","fukc youffds,asd,"fsd""))
sprintf("fuck",c("you","fukc youffds,asd,"fsd"))
sprintf("fuck",c("you","fukc youffds,asd","fsd"))
sprintf("--%s",c("you","fukc youffds,asd","fsd"))
sprintf("asd",c("you","fukc youffds,asd","fsd"))
sprintf("qqw",c("you","fukc youffds,asd","fsd"))
sprintf("\n",c("you","fukc youffds,asd","fsd"))
grep("fuc","fuck",value=T)
grep("fuc","fuck",value=TRUE)
?rpart
??rpart
install.packages("rpart")
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mse = 2.125
sd = sqrt(2*mse/(2*1))
B = qt(1-0.05/(2*3),(4-1)*(2-1))
d1 = 6 -0
d2 = 13.5-6
d3 = 16-13.5
c(d1-sd*B,d1+sd*B)
c(d2-sd*B,d2+sd*B)
c(d3-sd*B,d3+sd*B)
B
S = sqrt((4-1)*qf(1-0.05,3,3))
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse/8*(4))
c(L-Sl*S, L+Sl*S)
S
S = sqrt((4-1)*qf(1-0.05,3,3))
S
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse)
c(L-Sl*S, L+Sl*S)
\qquad Therefore, the 95\% interval is [-19.440156, -4.059844].
\item
eyeC = read.table("eye-contact.txt", header = TRUE)
fit = lm(score ~ factor(gender) + factor(contact) + I(gender*contact) , eyeC)
fit$fit
fit$resid
plot(fit, which = 2)
plot(fit, which = 1)
mu11 = mean(subset(invest$score, invest$A==1)) + mean(subset(invest$score, invest$B==1))-mean(invest$score)
t = qt(1-0.05/2, 3)
s = sqrt(mse/1)
scale
??scale
qf(0.90,4,3)
1:16
sum(1:16)
setwd("~/Course/2015winter/stat 207/hw/hw5")
seq(1:10)
x = numeric(100)
x
x = numeric(8)
x
xx[2] =  3
xx
xx = numeric(8)
xx[2] =  3
xx
return 0
return{0}
x = 1
y = 2
k = c(1, 2, 3)
sapply(k, function(p) { x-1+y+p   })
sapply(k, function(p) { p   })
doit = function(x=x, y=y, k=k){
sapply(k, function(p) { p   })
}
doit()
doit = function(x=x, y=y, k=k){
return(sapply(k, function(p) { p   }))
}
doit = function(x=x, y=y, k=k){
return(sapply(k, function(p) { p   }))
}
doit()
doit(x,y,k)
atan(10)
atan(1)
arctan
?arctan
??tan
trunc(300.4)
matrix(1:8,2)
matrix(1:8,2)+0
matrix(1:8,2)+1
?det
A = c(1,2,3)
sd(A)
mean(A)
require(gdata)
dat = read.xls("apartment.xlsx", header = TRUE)
dat.stan = dat
for(j in 1:ncol(dat))
dat.stan[,j] = (dat[,j] - mean(dat[,j]))/sd(dat[,j]); dat.stan
plot(dat)
cor(dat)
dat1 = read.xls("apartment.xlsx", header = TRUE)
dat.stan = dat1
for(j in 1:ncol(dat))
dat.stan[,j] = (dat[,j] - mean(dat[,j]))/sd(dat[,j])
dat = dat.stan
require(gdata)
dat1 = read.xls("apartment.xlsx", header = TRUE)
dat.stan = dat1
for(j in 1:ncol(dat1))
dat.stan[,j] = (dat1[,j] - mean(dat1[,j]))/sd(dat1[,j])
dat = dat.stan
plot(dat)
cor(dat)
require(Matrix)
X = dat[, 2:6]
X = as.matrix(X)
P = t(X) %*% X
eigen(P)
fit = lm(Y ~ 0 + ., data = dat)
summary(fit)
require(faraway)
vif(fit)
library('MASS')
select(lm.ridge(Y ~ 0 + ., data = dat,
lambda = seq(0, 1, .001)))
k = .321
library('ridge')
model = linearRidge(Y ~ 0 + ., data = dat,
lambda = k, scaling = 'none'); model
require('ridge')
install.packages("ridge")
require('ridge')
model = linearRidge(Y ~ 0 + ., data = dat,
lambda = k, scaling = 'none'); model
summary(model)
plot(model, which = 1)
fitted(model)
fit(model)
resid(model)
model
ridge
??ridge
?linearRidge
model1
fit(model)
fitted(model)
residual(model)
resid(model)
dat1
model
model$ym
model$terms
model$y
model$ym
model$y
model$coef
X
X%*%model$coef
plot(model$y, X%*%model$coef)
plot(X%*%model$coef, model$y - X%*%model$coef)
qqnorm(model$y - X%*%model$coef)
qqline(model$y - X%*%model$coef)
I
I(5)
I(3)
I[3]
?I
1+I(3)
I
size(I)
lenght(I)
length(I)
typeof(I)
VIF(model)
Vif(model)
vif(model)
ones(3)
one(3)
?one
?ones
??ones
??one
t(X)%*%X
solve(t(X)%*%X)
vif(fit)
solve(P)
dat1 = read.xls("apartment.xlsx", header = TRUE)
dat.stan = dat1
for(j in 1:ncol(dat1))
dat.stan[,j] = (dat1[,j] - mean(dat1[,j]))/(sd(dat1[,j])*(sqrt(25-1)))
dat = dat.stan
plot(dat)
cor(dat)
require(Matrix)
X = dat[, 2:6]
X = as.matrix(X)
P = t(X) %*% X
eigen(P)
solve(P)
diag(k)
p
P
k
solve(P + diag(k,5,5)) %*% P %*% solve(P + diag(k,5,5))
ans = solve(P + diag(k,5,5)) %*% P %*% solve(P + diag(k,5,5))
diag(ans)
drop1(fit, trace = FALSE)
require(gdata)
dat = read.xls("ratdrink.xlsx")
dat = dat[, 1:4]
datt = split(dat, dat$treat)
par(mfrow = c(1, 3))
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), xlab = unique(x$treat))})
par(mfrow = c(1, 1))
boxplot(weight~factor(weeks)*treat, data = dat)
summary(fit)
anova(fit)
drop1(fit, trace = FALSE)
require(gdata)
dat = read.xls("ratdrink.xlsx")
dat = dat[, 1:4]
datt = split(dat, dat$treat)
par(mfrow = c(1, 3))
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), xlab = unique(x$treat))})
@
par(mfrow = c(1, 1))
boxplot(weight ~ factor(weeks)*treat, data = dat)
par(mfrow = c(1, 1))
boxplot(weight ~ factor(weeks)*treat, data = dat)
require(lme4)
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat + (1|factor(subject)), data = dat )
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat + (1|as.factor(subject)), data = dat )
dat
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat + (1|as.factor(subject)), data = dat )
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat + (1|(subject)), data = dat )
dat$subject = as.factor(dat$subject)
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat + (1|subject), data = dat )
par(mfrow = c(1, 2))
plot(dat$weight, fitted(fit))
plot(fit, which = 1)
par(mfrow = c(1, 2))
plot(fit, which = 2)
boxplot(weight ~ weeks*treat, data = dat)
par(mfrow = c(1, 2))
plot(dat$weight, fitted(fit))
plot(fit, which = 1)
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat + (1|subject), data = dat )
par(mfrow = c(1, 1))
plot(dat$weight, fitted(fit))
plot(fit, which = 1)
par(mfrow = c(1, 1))
plot(fit, which = 2)
boxplot(weight ~ weeks*treat, data = dat)
summary(fit)
anova(fit)
drop1(fit, trace = FALSE)
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat + (1|subject), data = dat )
par(mfrow = c(1, 1))
plot(dat$weight, fitted(fit))
plot(fit, which = 1)
par(mfrow = c(1, 1))
plot(fit, which = 2)
boxplot(weight ~ weeks*treat, data = dat)
summary(fit)
anova(fit)
drop1(fit, trace = FALSE)
extractAIC(fit)
extractAIC(fit)
extractAIC(fit1)
extractAIC(fit2)
fit1 = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat, data = dat )
fit2 = lmer(weight ~ treat + factor(weeks):treat + (1|subject), data = dat )
fit3 = lmer(weight ~ factor(weeks) + factor(weeks):treat + (1|subject), data = dat )
fit4 = lmer(weight ~ factor(weeks) + treat + (1|subject), data = dat )
extractAIC(fit)
extractAIC(fit1)
fit1 = lmer(weight ~ factor(weeks) + treat + factor(weeks):treat, data = dat )
fit2 = lmer(weight ~ treat + factor(weeks):treat + (1|subject), data = dat )
fit3 = lmer(weight ~ factor(weeks) + factor(weeks):treat + (1|subject), data = dat )
fit4 = lmer(weight ~ factor(weeks) + treat + (1|subject), data = dat )
extractAIC(fit)
fit1 = lm(weight ~ factor(weeks) + treat + factor(weeks):treat, data = dat )
extractAIC(fit)
extractAIC(fit1)
extractAIC(fit2)
extractAIC(fit3)
extractAIC(fit4)
fit1 = lm(weight ~ factor(weeks) + treat + factor(weeks):treat, data = dat )
fit2 = lmer(weight ~ treat + factor(weeks):treat + (1|subject), data = dat )
fit3 = lmer(weight ~ factor(weeks) + factor(weeks):treat + (1|subject), data = dat )
fit4 = lmer(weight ~ factor(weeks) + treat + (1|subject), data = dat )
extractAIC(fit)
extractAIC(fit1)
extractAIC(fit2)
extractAIC(fit3)
extractAIC(fit4)
plot(fit, which = 2)
plot(fit, which = 1)
par(mfrow = c(1, 1))
plot(dat$weight, fitted(fit))
plot(fit, which = 1)
par(mfrow = c(1, 1))
plot(dat$weight, fitted(fit))
plot(fit, which = 1)
par(mfrow = c(1, 1))
boxplot(weight ~ weeks*treat, data = dat)
model2 = lmer(weight ~ weeks + I(weeks^2) + treat  + (1|subject)+ (0 + weeks|subject)+ (0 + I(weeks^2)|subject), data = dat )
summary(model2)
extractAIC(model)
extractAIC(model2)
model = lmer(weight ~ weeks + treat  + (1|subject) + (0 + weeks|subject), data = dat)
par( mfrow = c(1, 1))
plot(model, which = 1)
hist(resid(model))
boxplot(weight ~ weeks*treat, data = dat)
extractAIC(model)
extractAIC(model2)
fit1 = lmer(weight ~ treat + factor(weeks):treat + (1|subject), data = dat )
fit2 = lmer(weight ~ factor(weeks) + factor(weeks):treat + (1|subject), data = dat )
fit3 = lmer(weight ~ factor(weeks) + treat + (1|subject), data = dat )
extractAIC(fit)
extractAIC(fit1)
extractAIC(fit2)
extractAIC(fit3)
fit2 = lmer(weight ~ factor(weeks):treat + (1|subject), data = dat )
extractAIC(fit4)
fit1 = lm(weight ~ factor(weeks) + treat + factor(weeks):treat, data = dat )
fit2 = lmer(weight ~ treat + factor(weeks):treat + (1|subject), data = dat )
fit3 = lmer(weight ~ factor(weeks) + factor(weeks):treat + (1|subject), data = dat )
fit4 = lmer(weight ~ factor(weeks) + treat + (1|subject), data = dat )
AIC(fit)
AIC(fit1)
AIC(fit2)
AIC(fit3)
AIC(fit4)
AIC(model)
AIC(model2)
model = lmer(weight ~ weeks + treat  + (1|subject) + (0 + weeks|subject), data = dat)
par( mfrow = c(1, 1))
plot(model, which = 1)
hist(resid(model))
boxplot(weight ~ weeks*treat, data = dat)
@
\item
require(gdata)
dat1 = read.xls("apartment.xlsx", header = TRUE)
dat.stan = dat1
for(j in 1:ncol(dat1))
dat.stan[,j] = (dat1[,j] - mean(dat1[,j]))/(sd(dat1[,j])*(sqrt(25-1)))
dat = dat.stan
plot(dat)
cor(dat)
model2 = lmer(weight ~ weeks + I(weeks^2) + treat  + (1|subject)+ (0 + weeks|subject)+ (0 + I(weeks^2)|subject), data = dat )
summary(model2)
@
\qquad No, they seems to be different.
\item
require(gdata)
dat1 = read.xls("apartment.xlsx", header = TRUE)
dat.stan = dat1
for(j in 1:ncol(dat1))
dat.stan[,j] = (dat1[,j] - mean(dat1[,j]))/(sd(dat1[,j])*(sqrt(25-1)))
dat = dat.stan
plot(dat)
cor(dat)
AIC(model)
AIC(model2)
anova(model2)
summary(model2)
anova(model2)
summary(model2)
require(gdata)
dat = read.xls("ratdrink.xlsx")
dat = dat[, 1:4]
dat$wk = dat$weeks - mean(dat$weeks); dat$wk
dat$wk2 = dat$wk^2; dat$wk2
dat$weeks = as.factor(dat$weeks)
dat$subject = as.factor(dat$subject)
datt = split(dat, dat$treat)
model = lmer(weight ~ wk + treat  + (1|subject) + (0 + wk|subject), data = dat)
par( mfrow = c(1, 1))
plot(model, which = 1)
hist(resid(model))
boxplot(weight ~ weeks*treat, data = dat)
model = lmer(weight ~ wk + treat  + (1|subject) + (0 + wk|subject), data = dat)
par( mfrow = c(1, 1))
plot(model, which = 1)
hist(resid(model))
boxplot(weight ~ wk*treat, data = dat)
model2 = lmer(weight ~ wk + wk2 + treat  + (1|subject)+ (0 + wk|subject)+ (0 + wk2|subject), data = dat )
summary(model2)
AIC(model)
AIC(model2)
summary(model2)
dat$treat
match(dat$treat,c(1,0,-1))
dat$treat
match(levels(dat$treat),c(1,0,-1))
match(c(1,0,-1),levels(dat$treat))
levels(dat$treat)
match(c(1,0,-1),levels(dat$treat))
?match
p["control"]=1
p["thiouracil"]=0
p["thyroxine" ]=0
p[dat$treat]
dat$treat
p
p
p=0
p=0
p
p["thiouracil"]=0
p["control"]=1
p["thiouracil"]=0
p["thyroxine" ]=-1
p[dat$treat]
dat$treat
p[1]
p[dat$treat[1]]
dat$treat[1]
p[control]
p["control"]
model3 = lmer(weight ~ wk + wk2 + treat  + (1|subject) + wk*treat + wk2*treat, data = dat )
summary(model3)
drop1(model3)
104.6114-10.0886
26.48-9.37
0.6143-1.9357
104.6114-0.8931
26.48+0.6629
0.6143+0.7122
summary(model3)
drop1(model3)
hist(resid(model))
boxplot(weight ~ wk*treat, data = dat)
