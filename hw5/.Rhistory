plot(row, a1,"l",lty=2, main="compare five methods", xlab="row number", ylab="harvest")
par(new=TRUE)
plot(row, a2,"l",lty=3,main=NA,xlab=NA,ylab=NA,colors="red")
par(new=TRUE)
plot(row, a3,"l",lty=4,main=NA,xlab=NA,ylab=NA,colors=3)
par(new=TRUE)
plot(row, a4,"l",lty=5,main=NA,xlab=NA,ylab=NA,colors=4)
par(new=TRUE)
plot(row, a5,"l",lty=6,main=NA,xlab=NA,ylab=NA,colors=5)
points(row,y)
x=matrix(c(1,1,1,1,1,-.63,.18,-/84,1.6,.33,-.82,.49,.74,.58,-.31),c(3,5))
x=matrix(c(1,1,1,1,1,-.63,.18,-.84,1.6,.33,-.82,.49,.74,.58,-.31),c(3,5))
x
x=matrix(c(1,1,1,1,1,-.63,.18,-.84,1.6,.33,-.82,.49,.74,.58,-.31),c(5,3))
x
y=matrix(c(-.97,2.51,-.19,6.53,1),c(5,1))
y
t(x)%*%x
t(x)%*%y
solve(t(x)%*%x)
p=solve(t(x)%*%x)
q=t(x)%*%y
p%*%q
q=t(x)%*%x
x%*%P%*%t(x)
x%*%p%*%t(x)
library("MATRIX")
library("matrix")
require("matrix")
rankmatrix(h)
h=x%*%p%*%t(x)
install.packages("matrix")
library("Matrix", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
rankmatrix(h)
rankMatrix(h)
rankMatrix(I-h)
matrix(I)
I=diag(3)
I
I=diag(5)
rankMatrix(I-h)
h
I=diag(3) p=solve(t(x)%*%x)
> q=t(x)%*%y
> p%*%q
p=solve(t(x)%*%x)
> q=t(x)%*%y
> p%*%q
p=solve(t(x)%*%x)
q=t(x)%*%y
p%*%q
p=solve(t(x)%*%x)
q=t(x)%*%y
b= p%*%q
b
yhat=x%*%b
yhat
y-yhat
sum((y-yhat)^2)
sum((y-yhat)^2)/3
mse=sum((y-yhat)^2)/3
p=solve(t(x)%*%x)
p*mse
sqrt(0.064362708)
sqrt(0.088514115)
sqrt(0.18300942)
xx
xx=cbind(x,c(-.63*-.82,.18*.49,-.84*.74,1.6*.58,.33*-.31))
xx
yy=y
xx%*%(solve(t(xx)%*%xx))%*%t(xx)
hh=xx%*%(solve(t(xx)%*%xx))%*%t(xx)
rankMatrix(hh)
rankMatrix(hh)
yyhat=(solve(t(xx)%*%xx))%*%t(xx)%*%yy
bb=(solve(t(xx)%*%xx))%*%t(xx)%*%yy
bb
xx%*%bb
yyhat=xx%*%bb
yy-yyhat
ee=yy-yyhat
sum(ee^2)
sum(ee^2)/4
ã€‚36*2.14
.36*2.14
.66*.74
.66*1.91
.52*.51
.52*.41
xx=matrix(c(.087,-.014,.035,.004,-.014,.115,-.012,-.052,-.035,-.012,.057,-.014,-.004,-.052,-.014,.05),c(4,4))
xx
xx[3,1]=-xx[3,1]
xx[4,1]=-xx[4,1]
xx
xh=matrix(c(1,0,0,0),c(4,1))
xh
t(xh)%*%xx%*%xh
1:2
50:2.5
1.02^2
1.02^2*(1.087)
pt(0.975,26)
p=pt(0.975,26)
0.9918-p*1.130915
0.9918+p*1.130915
58.232+5.49+.448
58.232+5.49+.448
58.232+5.49+.44+27.48
ssto=91.642
ssto-58.232
5.49+0.448
58.232+5.49
ssto-63.722
matrix(c(1,2,3,4,5,6),c(3,2))
a=matrix(c(1,2,3,4,5,6),c(3,2))
solve(a)
1.0404*(1+0.087)
pt(0.975,26)
pt(.999,82)
qt(.999,82)
qt(.995,82)
27.048+.448+5.49
5.49+.448
a=5.49+.448
a=a/2
a/(27.048/26)
df(1,28)
pf(1,28)
qf(1,28)
qf(0,1,28)
qf(1,1,28)
qf(0,1,28)
pvalue()
?pvalue
??pvalue
?pf
qf(1-.01,2,26)
sqrt(1.0404*1.087)
sqrt(1.04*1.087)
0.9918-2.055529*1.063445
0.9918+2.055529*1.063445
100-10
77.382-21.818
.753/.98
.753/.9855
install.packages("patchDVI")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
choose(3,2)
choose(4,2)
choose(7,2)*(1/3)^2*(2/3)^5
choose(7,3)*(1/3)^3*(2/3)^4
choose(7,2)
choose(7,3)
choose(7,2)*(2/3)^2*(1/3)^5
choose(7,3)*(2/3)^3*(1/3)^4
e
??e
exp(-0.3)
exp(-0.3)*1.3
exp(-3.125)*(3.125^2/2)
exp(-3.125)*(3.125^3/6)
exp(-3.125)*(3.125^4/24)
0.2145+.2234+.1745
a=exp(-3.125)*(3.125^2/2)
b=exp(-3.125)*(3.125^3/6)
c=exp(-3.125)*(3.125^4/24)
a+b+c
exp(-2)*(28/3)
exp(-2)*(4)
extractAIC(fit, k=log(n))
fit2 = lm(Y~X1+ X2+ X4, data=data)
fds
llfdsf
a=1:3
names(a)=c("a","b","c")
match("a",a)
match("a",names(a))
match("c",names(a))
?sprintf
n <- 1:18
sprintf(paste0("e with %2d digits = %.", n, "g"), n, exp(1))
sprintf("min 10-char string '%10s'",
c("a", "ABC", "and an even longer one"))
sprintf("fuck","you")
sprintf("fuck",c("you"))
sprintf("fuck",c("you","fukc you"))
sprintf("fuck",c("you","fukc youffds"))
sprintf("fuck",c("you","fukc youffds,asd"))
sprintf("fuck",c("you","fukc youffds,asd,"fsd))
sprintf("fuck",c("you","fukc youffds,asd,"fsd""))
sprintf("fuck",c("you","fukc youffds,asd,"fsd"))
sprintf("fuck",c("you","fukc youffds,asd","fsd"))
sprintf("--%s",c("you","fukc youffds,asd","fsd"))
sprintf("asd",c("you","fukc youffds,asd","fsd"))
sprintf("qqw",c("you","fukc youffds,asd","fsd"))
sprintf("\n",c("you","fukc youffds,asd","fsd"))
grep("fuc","fuck",value=T)
grep("fuc","fuck",value=TRUE)
?rpart
??rpart
install.packages("rpart")
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mse = 2.125
sd = sqrt(2*mse/(2*1))
B = qt(1-0.05/(2*3),(4-1)*(2-1))
d1 = 6 -0
d2 = 13.5-6
d3 = 16-13.5
c(d1-sd*B,d1+sd*B)
c(d2-sd*B,d2+sd*B)
c(d3-sd*B,d3+sd*B)
B
S = sqrt((4-1)*qf(1-0.05,3,3))
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse/8*(4))
c(L-Sl*S, L+Sl*S)
S
S = sqrt((4-1)*qf(1-0.05,3,3))
S
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse)
c(L-Sl*S, L+Sl*S)
\qquad Therefore, the 95\% interval is [-19.440156, -4.059844].
\item
eyeC = read.table("eye-contact.txt", header = TRUE)
fit = lm(score ~ factor(gender) + factor(contact) + I(gender*contact) , eyeC)
fit$fit
fit$resid
plot(fit, which = 2)
plot(fit, which = 1)
mu11 = mean(subset(invest$score, invest$A==1)) + mean(subset(invest$score, invest$B==1))-mean(invest$score)
t = qt(1-0.05/2, 3)
s = sqrt(mse/1)
scale
??scale
qf(0.90,4,3)
1:16
sum(1:16)
setwd("~/Course/2015winter/stat 207/hw/hw5")
dat = read.table("apartment.xlsx")
dat
dat = read.csv("apartment.xlsx")
dat = read.csv("apartment.xlsx", header = TRUE)
dat = read.delim("apartment.xlsx", header = TRUE)
dat = read.table("apartment.xlsx", header = TRUE)
dat = read.xlsx("apartment.xlsx", header = TRUE)
dat = read.xls("apartment.xlsx", header = TRUE)
?read.xls
??read.xls
require(gdata)
dat = read.xls("apartment.xlsx", header = TRUE)
dat
matplot(dat)
cor(dat)
plot(dat)
X = dat[,2:5]
dat
X
X = c( rep(1, 25), dat[, 2:5])
X
X = c( t(rep(1, 25)), dat[, 2:5])
X
X = cbind( t(rep(1, 25)), dat[, 2:5])
X
rep(1, 25)
t(rep(1, 25))
X = rbind( t(rep(1, 25)), dat[, 2:5])
X
X = rbind( (rep(1, 25)), dat[, 2:5])
X
X = cbind( (rep(1, 25)), dat[, 2:5])
X
P = t(X) %*% X
P
X = cbind(rep(1, 25), dat[, 2:5])
P = t(X) %*% X
require(matrix)
P = t(X) %*% X
matrix
?matrix
?%*%
??%*%
install.packages("Matrix")
require(Matrix)
P = t(X) %*% X
X = as.matrix(X)
P = t(X) %*% X
P
eigen(P)
require(Matrix)
X = dat[, 2:5]
X = as.matrix(X)
P = t(X) %*% X
eigen(P)
X = dat[, 2:5]
X
X = dat[, 2:6]
X = as.matrix(X)
P = t(X) %*% X
eigen(P)
X
P
fit = lm(Y ~ ., data = dat)
summart(fit)
summary(fit)
anova(fit)
fit = lm(Y ~ ., data = dat)
summary(fit)
anova(fit)
fit = lm(Y ~ ., data = dat)
summary(fit)
anova(fit)
VIF(fit)
vif(fit)
??vif
require(fareway)
require(faraway)
vif(fit)
require(gdata)
dat = read.xls("apartment.xlsx", header = TRUE)
plot(dat)
cor(dat)
dat
X = dat[, 2:6]
X = as.matrix(X)
P = t(X) %*% X
eigen(P)
fit = lm(Y ~ ., data = dat)
summary(fit)
anova(fit)
require(faraway)
vif(fit)
dat = read.xls("ratdrink.xlsx.xlsx", header = TRUE)
dat
dat = read.xls("ratdrink.xlsx", header = TRUE)
adt
dat
dat = read.xls("ratdrink.xlsx")
dat
dat = dat[, 1:4]
dat
dat1 = dat[dat$treat == 'control']
dat1 = dat[which(dat$treat == 'control'),]
dat1
interaction.plot(dat1$weight,dat1$weeks, dat1$subject)
interaction.plot(dat1$weight, dat1$subject, dat1$weeks)
interaction.plot( dat1$subject, dat1$weeks, dat1$weight)
interaction.plot(dat1$weeks, dat1$subject, dat1$weight)
dat1 = dat[which(dat$treat == 'control'), ]
dat2 = dat[which(dat$treat == 'thyroxine'), ]
dat3 = dat[which(dat$treat == 'thiouracil'), ]
par(mfrow = c(1, 3))
interaction.plot(dat1$weeks, dat1$subject, dat1$weight)
interaction.plot(dat2$weeks, dat2$subject, dat2$weight)
interaction.plot(dat3$weeks, dat3$subject, dat3$weight)
interaction.plot(dat1$weeks, dat1$subject, dat1$weight, ylim = c(40, 200))
interaction.plot(dat2$weeks, dat2$subject, dat2$weight, ylim = c(40, 200))
interaction.plot(dat3$weeks, dat3$subject, dat3$weight, ylim = c(40, 200))
split(dat$treat)
split(dat,dat$treat)
datt = split(dat, dat$treat)
sapply(datt, function(x){  interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200))
sapply(datt, function(x){  interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200))
})
sapply(datt, function(x){  interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200))})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200))})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200))})
par(mfrow = c(1, 3))
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200))})
par(mfrow = c(1, 3))
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), main = x.treat)})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), ylab = x.treat)})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), ylab = x.treat)})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), ylab = x$treat)})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), xlab = x$treat)})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), ylab = unique(x$treat))})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), ylab = unique(x$treat))})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), ylab = unique(x$treat))})
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), xlab = unique(x$treat))})
boxplot(weight~week*treat, data = dat)
boxplot(weight~weeks*treat, data = dat)
par(mfrow = c(1, 1))
boxplot(weight~weeks*treat, data = dat)
??lmer
require(lme4)
dat$weeks = factor(dat$weeks)
dat$weeks = factor(dat$weeks)
datt = split(dat, dat$treat)
par(mfrow = c(1, 3))
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), xlab = unique(x$treat))})
par(mfrow = c(1, 1))
boxplot(weight~weeks*treat, data = dat)
fit = lmer(weight ~ weeks + treat + (1|subject), data = dat )
fit
summary(fit)
fit = lmer(weight ~ weeks + treat + weeks*treat + (1|subject), data = dat )
summary(fit)
plot(fit, which = 1)
boxplot(weight ~ weeks*treat, data = dat)
plot(dat$weight, fitted(fit))
anova(fit)
summary(fit)
stepAIC(fit, direction = "backward", )
??stepAIC
require(MASS)
stepAIC(fit, direction = "backward" )
require(gdata)
dat = read.xls("ratdrink.xlsx")
dat = dat[, 1:4]
datt = split(dat, dat$treat)
par(mfrow = c(1, 3))
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), xlab = unique(x$treat))})
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks)*treat + (1|subject), data = dat )
summary(fit)
boxplot(weight~factor(weeks)*treat, data = dat)
model = lmer(weight ~ weeks + treat  + (1|subject), data = dat )
summary(model)
plot(model, which = 1)
hist(resid(model))
par( mfrow = c(1, 2))
plot(model, which = 1)
hist(resid(model))
par( mfrow = c(1, 2))
plot(model, which = 1)
hist(resid(model))
par( mfrow = c(1, 1))
plot(model, which = 1)
hist(resid(model))
model2 = lmer(weight ~ weeks + weeks^2 + treat  + (1|subject), data = dat )
summary(model2)
model2 = lmer(weight ~ weeks + I(weeks^2) + treat  + (1|subject), data = dat )
summary(model2)
extractAIC(model)
extractAIC(model2)
extractAIC(model)
extractAIC(model2)
model3 = lmer(weight ~ weeks + I(weeks^2) + treat  + (1|subject) + (0 + weeks|subject)+ (0 + I(weeks^2)|subject), data = dat )
summary(model3)
model3 = lmer(weight ~ weeks + I(weeks^2) + treat  + (1|subject) + (0 + treat|subject), data = dat )
stepAIC(fit, direction = "both" )
require(gdata)
dat = read.xls("ratdrink.xlsx")
dat = dat[, 1:4]
datt = split(dat, dat$treat)
par(mfrow = c(1, 3))
sapply(datt, function(x){interaction.plot(x$weeks, x$subject, x$weight, ylim = c(40, 200), xlab = unique(x$treat))})
require(lme4)
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks)*treat + (1|subject), data = dat )
par(mfrow = c(1, 2))
plot(dat$weight, fitted(fit))
plot(fit, which = 1)
par(mfrow = c(1, 1))
boxplot(weight ~ weeks*treat, data = dat)
require(MASS)
stepAIC(fit, direction = "both" )
stepAIC(fit,scope = {lower = ~ 1} direction = "both" )
stepAIC(fit,scope = {lower = ~ 1}, direction = "both" )
stepAIC(fit, scope = {lower = ~ 1}, direction = "both" )
stepAIC(fit, scope = {lower = ~ 1}, direction = "both" )
fit
step(fit, scope = {lower = ~ 1}, direction = "both" )
require(lmerTest)
install.packages("lmerTest")
require(lmerTest)
step(fit, scope = {lower = ~ 1}, direction = "both" )
fit = lmer(weight ~ factor(weeks) + treat + factor(weeks)*treat + (1|subject), data = dat )
step(fit, scope = {lower = ~ 1}, direction = "both" )
step(fit, scope = {lower = ~ 1}, direction = "backward" )
drop1(fit, scope = {lower = ~ 1}, direction = "backward" )
drop1(fit, direction = "backward" )
drop1(fit, direction = "backward" )
??drop1
drop(fit, direction = "backward" )
drop1(fit, trace = FALSE )
model = lmer(weight ~ weeks + treat  + (1|subject), data = dat)
par( mfrow = c(1, 1))
plot(model, which = 1)
hist(resid(model))
boxplot(weight ~ weeks*treat, data = dat)
@
\item
require(gdata)
dat = read.xls("apartment.xlsx", header = TRUE)
plot(dat)
cor(dat)
model2 = lmer(weight ~ weeks + I(weeks^2) + treat  + (1|subject), data = dat )
summary(model2)
@
\item
require(gdata)
dat = read.xls("apartment.xlsx", header = TRUE)
plot(dat)
cor(dat)
extractAIC(model)
extractAIC(model2)
summary(model)
model3 = lmer(weight ~ weeks + I(weeks^2) + treat  + (1|subject) + (0 + weeks|subject)+ (0 + I(weeks^2)|subject), data = dat )
summary(model3)
drop1(fit, trace = FALSE)
drop1(model3, trace = FALSE)
summary(model3)
model3
model = lmer(weight ~ weeks + treat  + (1|subject), data = dat)
drop1(model)
drop1(fit)
drop1(fit, trace = FALSE)
summary(fit)
drop1(fit, trace = FALSE)
drop(model3, trace = FALSE)
summary(model3)
drop(model3)
drop1(model3)
