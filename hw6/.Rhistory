?rpart
??rpart
install.packages("rpart")
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mse = 2.125
sd = sqrt(2*mse/(2*1))
B = qt(1-0.05/(2*3),(4-1)*(2-1))
d1 = 6 -0
d2 = 13.5-6
d3 = 16-13.5
c(d1-sd*B,d1+sd*B)
c(d2-sd*B,d2+sd*B)
c(d3-sd*B,d3+sd*B)
B
S = sqrt((4-1)*qf(1-0.05,3,3))
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse/8*(4))
c(L-Sl*S, L+Sl*S)
S
S = sqrt((4-1)*qf(1-0.05,3,3))
S
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse)
c(L-Sl*S, L+Sl*S)
\qquad Therefore, the 95\% interval is [-19.440156, -4.059844].
\item
eyeC = read.table("eye-contact.txt", header = TRUE)
fit = lm(score ~ factor(gender) + factor(contact) + I(gender*contact) , eyeC)
fit$fit
fit$resid
plot(fit, which = 2)
plot(fit, which = 1)
mu11 = mean(subset(invest$score, invest$A==1)) + mean(subset(invest$score, invest$B==1))-mean(invest$score)
t = qt(1-0.05/2, 3)
s = sqrt(mse/1)
scale
??scale
qf(0.90,4,3)
1:16
sum(1:16)
setwd("~/Course/2015winter/stat 207/hw/hw6")
dat = read.csv("CH14PR09.txt")
dat = read.csv("CH14PR09.txt")
dat
dat = read.csv("CH14PR09.txt", header = TRUE)
dat
dat = read.table("CH14PR09.txt", header = TRUE)
dat
dat = read.table("CH14PR09.txt")
dat
names(dat) = c("Y", "X")
dat
model = glm(Y ~ X, data = dat, family = "binomial")
summary(model)
dat = read.table("CH14PR09.txt")
names(dat) = c("Y", "X")
logit = glm(Y ~ X, data = dat, family = "binomial")
summary(logit)
plot(lowess(logit ~ X))
plot(lowess(logit ~ dat$X))
fitted(logit)
plot(lowess(fitted(logit) ~ dat$X))
plot(lowess(dat$Y ~ dat$X))
plot(logit)
plot(logit)
plot(dat$X, logit)
plot(dat$X, logit)
plot(dat$X, fitted(logit))
plot(lowess(dat$Y ~ dat$X))
plot(dat$X, fitted(logit))
plot(lowess(dat$Y ~ dat$X), lty = 1)
plot(dat$X, fitted(logit), lty = 2)
plot(lowess(dat$Y ~ dat$X), pch =  1)
plot(lowess(dat$Y ~ dat$X), pch =  2)
plot(dat$X, fitted(logit), pch = 1)
plot(lowess(dat$Y ~ dat$X), pch = 2, add = TRUE)
points(dat$X, dat$Y)
plot(lowess(dat$Y ~ dat$X), pch = 2, add = TRUE)
plot(dat$X, fitted(logit), pch = 1, add = TRUE)
plot(lowess(dat$Y ~ dat$X), pch = 2, add = TRUE)
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), pch = 2, add = TRUE)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = TRUE)
points(dat$X, dat$Y)
lines(dat$X, fitted(logit), pch = 2, add = TRUE)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = TRUE)
lines(dat$X, fitted(logit), pch = 2, add = TRUE)
lines(dat$X, fitted(logit), pch = 2)
lines(dat$X, fitted(logit), pch = 2)
lines(dat$X, fitted(logit), pch = 2)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = TRUE)
lines(dat$X, fitted(logit), pch = 2)
plot(dat$X, fitted(logit), pch = 2)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = TRUE)
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), type = "line", pch = 2)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = TRUE)
plot(dat$X, fitted(logit), type = "line", pch = 2)
plot(dat$X, fitted(logit), type = "lines", pch = 2)
plot(dat$X, fitted(logit), pch = 2)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = TRUE)
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), pch = 2)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = "T")
curve(dat$X, fitted(logit), pch = 2)
plot(lowess(dat$Y ~ dat$X), pch = 3, add = "T")
curve(dat$X, fitted(logit), pch = 2)
curve(lowess(dat$Y ~ dat$X), pch = 3, add = "T")
lines(lowess(dat$Y ~ dat$X), pch = 3, add = "T")
plot(dat$X, fitted(logit), pch = 2)
lines(lowess(dat$Y ~ dat$X), pch = 3, add = "T")
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), type="line", pch = 2)
plot(dat$X, fitted(logit), pch = 2)
lines(lowess(dat$Y ~ dat$X), pch = 3, add = "T")
points(dat$X, dat$Y)
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), pch = 2)
lines(lowess(dat$Y ~ dat$X), pch = 3)
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), pch = 2)
lines(lowess(dat$Y ~ dat$X), pch = 3)
points(dat$X, dat$Y)
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), pch = 2)
points(dat$X, dat$Y)
lines(lowess(dat$Y ~ dat$X), pch = 3)
plot(dat$X, fitted(logit), pch = 2)
plot(dat$X, fitted(logit), pch = 2)
points(dat$X, dat$Y, add="T")
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), pch = 2)
points(dat$X, dat$Y)
lines(lowess(dat$Y ~ dat$X), pch = 3)
dat
plot(dat$X, fitted(logit), pch = 2, xlim = c(0, 1))
points(dat$X, dat$Y)
plot(dat$X, fitted(logit), pch = 2, ylim = c(0, 1))
points(dat$X, dat$Y)
lines(lowess(dat$Y ~ dat$X), pch = 3)
points(dat$X, dat$Y, lwd = 2)
points(dat$X, dat$Y, lwd = 10)
plot(dat$X, fitted(logit), pch = 2, ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 10)
lines(lowess(dat$Y ~ dat$X), pch = 3)
points(dat$X, dat$Y, lwd = 5)
plot(dat$X, fitted(logit), pch = 2, ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 5)
lines(lowess(dat$Y ~ dat$X), pch = 3)
points(dat$X, dat$Y, lwd = 8)
plot(dat$X, fitted(logit), pch = 2, ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), pch = 3)
plot(dat$X, fitted(logit), type ="l", ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), pch = 3)
curve(dat$X, fitted(logit), type ="l", ylim = c(0, 1))
curve(dat$X, fitted(logit), ylim = c(0, 1))
plot(dat$X, fitted(logit), ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), pch = 3)
lines(lowess(dat$Y ~ dat$X), lty = 2)
plot(dat$X, fitted(logit), ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), lty = 2)
plot(dat$X, fitted(logit), lty = 1, ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), lty = 2)
plot(dat$X, fitted(logit), lty = 3, ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), lty = 2)
plot(dat$X, fitted(logit), type = "n", lty = 1, ylim = c(0, 1))
plot(dat$X, fitted(logit), type = "n", lty = 1, ylim = c(0, 1))
plot(dat$X, fitted(logit), type = "n", ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), lty = 2)
plot(dat$X, fitted(logit), type = "b", ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), lty = 2)
plot(dat$X, fitted(logit), ylim = c(0, 1))
plot(dat$X, fitted(logit), type = "s", ylim = c(0, 1))
plot(dat$X, fitted(logit), type = "s", ylim = c(0, 1))
plot(dat$X, fitted(logit), type = "S", ylim = c(0, 1))
fitted(logit)
plot(dat$X, sort(fitted(logit)), type = "S", ylim = c(0, 1))
plot(dat$X, sort(fitted(logit)), type = "l", ylim = c(0, 1))
sort(fitted(logit))
plot(dat$X, fitted(logit), ylim = c(0, 1))
plot(dat$X, fitted(logit), type = l, ylim = c(0, 1))
plot(dat$X, fitted(logit), type = "l", ylim = c(0, 1))
plot(dat$X, fitted(logit), ylim = c(0, 1))
points(dat$X, dat$Y, lwd = 9)
lines(lowess(dat$Y ~ dat$X), lty = 2)
exp(0.018920)
newdat = data.frame(X = 550)
predict(logit, newdata = newdat)
exp(0.09698098 )/(1+exp(0.09698098 ))
fitted(exp(0.09698098 )/(1+exp(0.09698098 )))
fitted(predict(logit, newdata = newdat))
newdat = data.frame(X = 550)
fitted(predict(logit, newdata = newdat))
newdat = 550
pi_1 = -10.308925 + 0.018920*newdat
exp(pi_1)/(1+exp(pi_1))
newpi = 0.7
pi_2 = log(newpi/(1-newpi))
newpi = 0.7
pi_2 = log(newpi/(1-newpi))
(pi_2 - (-10.308925))/0.018920
dat = read.table("CH14PR11.txt")
dat
dat = read.table("CH14PR11.txt")
names(dat) = c("X", "n", "Y")
plot(dat$X, dat$Y/dat$n)
logit = glm(Y/n ~ X, data = dat, family = "binomial")
summary(logit)
plot(dat$X, fitted(logit), ylim = c(0, 1))
points(dat$X, dat$Y/dat$n, lwd = 9)
lines(lowess(dat$Y/dat$n ~ dat$X), lty = 2)
plot(dat$X, fitted(logit), ylim = c(0, 1))
points(dat$X, dat$Y/dat$n, lwd = 1)
lines(lowess(dat$Y/dat$n ~ dat$X), lty = 2)
exp(0.1359)
newdat = 15
pi_1 = -2.0766 + 0.1359*newdat
exp(pi_1)/(1+exp(pi_1))
newpi = 0.75
pi_2 = log(newpi/(1-newpi))
(pi_2 - (-2.0766))/0.1359
dat = read.table("CH14PR14.txt")
dat
dat = read.table("CH14PR14.txt")
names(dat) = c("Y", "X1", "X2", "X3")
logit = glm(Y ~ X1 + X2 + X3, data = dat, family = "binomial")
summary(logit)
exp(0.07279)
exp(-0.09899 )
exp(0.43397)
1-0.9057518
newdat = data.frame(X1 = 55, X2 = 60, X3 = 1)
pi_1 = predict(logit, newdata = newdat)
fitted(logit, pi_1)
pi_1 = predict(logit, newdata = newdat, type = "response")
predict(logit, newdata = newdat, type = "response")
newdat = data.frame(X1 = 550)
predict(logit, newdata = newdat, type = "response")
dat = read.table("CH14PR09.txt")
names(dat) = c("Y", "X")
logit = glm(Y ~ X, data = dat, family = "binomial")
summary(logit)
newdat = data.frame(X1 = 550)
predict(logit, newdata = newdat, type = "response")
newdat = data.frame(X = 550)
predict(logit, newdata = newdat, type = "response")
dat = read.table("CH14PR11.txt")
names(dat) = c("X", "n", "Y")
logit = glm(Y/n ~ X, data = dat, family = "binomial")
summary(logit)
newdat = data.frame(X = 15)
predict(logit, newdata = newdat, type = "response")
dat = read.table("CH14PR13.txt")
names(dat) = c("Y", "X1", "X2")
logit = glm(Y ~ X1 + X2, data = dat, family = "binomial")
summary(logit)
qz(1-0.05/2)
pz(1-0.05/2)
??pz
pf
??pf
qf
??qf
?qf
?Zdist
??Zdist
qz(1-0.05/2)
qnorm(1-0.05/2)
pnorm(1.959964)
pnorm(1.535, lower.tail = FALSE)
logLik(mylogit)
logLik(logit)
logit2 = glm(Y ~ X1, data = dat, family = "binomial")
logLik(logit2)
-18.34482--19.65227
qchisq(1-0.05, 3-2)
pchisq(2.614, 1)
pchisq(2.614, 1, lower.tail = FALSE)
logitF = glm(Y ~ X1 + X2 +I(X1^2) + I(X2^2) + I(X1:X2), data = dat, family = "binomial")
logitF = glm(Y ~ X1 + X2 +I(X1^2) + I(X2^2) + I(X1*X2), data = dat, family = "binomial")
logLik(logitF)
summary(logitF)
logLik(logitF)-logLik(logit)
2*(logLik(logitF)-logLik(logit))
qchisq(1-0.05, 6-3)
pchisq(2.438, 3, lower.tail = FALSE)
pchisq(2.436953, 3, lower.tail = FALSE)
dat = read.table("apartment.txt")
dat
dat = read.table("apartment.txt", header = TRUE)
dat
pls(dat)
?pls
??pls
install.packages("pls")
require("pls")
?pls
fit = plsr(Y ~ X1 + X2 + X3 + X4 + X5, 5, validation="CV")
fit = plsr(Y ~ X1 + X2 + X3 + X4 + X5, data = dat, 5, validation="CV")
summary(fit)
loading(fit)
loadings(fit)
loadings(fit,x = X1+X2+X3)
loadings(fit)[,1:3]
plot(fit, plottype = "scores", comps = 1:3)
r[0]
r[1:3]
r=1:3
r
r[0]
r[1]
fit$coefficients
fit$model
summary(fit)
names(summary(fit))
names(summary(fit))
summary(fit)[1]
summary(fit)[2]
Radj = c(95.1 ,   95.21  ,  96.61  ,  98.05 , 98.05)/100
Radj
ans = integer(5)
ans
ans[i] = (n-i-1)*(Radj[i]-Radj[i-1])/(1-Radj[i])
for (i = 1:5)
{
ans[i] = (n-i-1)*(Radj[i]-Radj[i-1])/(1-Radj[i])
}
for (i=1:5) i
for (i in 1:5) i
for (i in 1:5)
{
ans[i] = (n-i-1)*(Radj[i]-Radj[i-1])/(1-Radj[i])
}
for (i in 2:6)
{
ans[i-1] = (n-i-2)*(Radj[i]-Radj[i-1])/(1-Radj[i])
}
ans
dat
n = 25
for (i in 2:6)
{
ans[i-1] = (n-i-2)*(Radj[i]-Radj[i-1])/(1-Radj[i])
}
ans
i=6
Radj = c(0, 95.1 ,   95.21  ,  96.61  ,  98.05 , 98.05)/100
n = 25
ans = integer(5)
for (i in 2:6)
{
ans[i-1] = (n-i-2)*(Radj[i]-Radj[i-1])/(1-Radj[i])
}
ans
install.packages("glmnet")
a = c(2,4,6)
b = 1:3
a/b
a = as.matrix(a)
b = as.matrix(b)
a/b
a
setwd("~/Course/2015winter/stat 207/hw/hw6")
dat = read.table("CH14PR09.txt")
names(dat) = c("Y", "X")
logit = glm(Y ~ X, data = dat, family = "binomial")
summary(logit)
plot(dat$X, dat$Y)
points(dat$X, fitted(logit), type = 'l', lty = 1)
points(dat$X, lowess(dat$X, dat$Y)$Y, type = 'l', lty = 2)
legend('right', legend = c('fitted', 'lowess'),
lty = 1:2)
b0 = coef(logit)[1]; b0
b1 = coef(logit)[2]; b1
plot(dat$X, dat$Y)
points(dat$X, fitted(logit), type = 'l', lty = 1)
points(dat$X, lowess(dat$X, dat$Y)$Y, type = 'l', lty = 2)
legend('right', legend = c('fitted', 'lowess'),
plot(dat$X, dat$Y)
points(dat$X, lowess(dat$X, dat$Y)$Y, type = 'l', lty = 2)
plot(dat$X, dat$Y)
points(dat$X, lowess(dat$X, dat$Y)$Y, type = 'l', lty = 2)
lowess(dat$X, dat$Y)$Y
lowess(dat$X, dat$Y)
plot(dat$X, dat$Y)
points(dat$X, fitted(logit), type = 'l', lty = 1)
points(dat$X, lowess(dat$X, dat$Y)$y, type = 'l', lty = 2)
legend('right', legend = c('fitted', 'lowess'),
lty = 1:2)
fitted(logit)
dat$X
dat = read.table("apartment.txt", header = TRUE)
require("pls")
dat.stan = dat
for(j in 1:ncol(dat))
dat.stan[,j] = (dat[,j] - mean(dat[,j]))/sd(dat[,j])
n = nrow(dat); n
fit = plsr(Y ~ X1 + X2 + X3 + X4 + X5, data = dat.stan, 5, validation = "CV")
summary(fit)
fit = plsr(Y ~0 + ., data = dat.stan, 5, validation = "CV")
summary(fit)
scores(fit)
loadings(fit)[, 1:3]
plot(fit, plottype = "scores", comps = 1:3)
fit$projection
k = 1:6
r.sq = c(92.14 ,   96.53  ,  97.92  ,  98.01 ,   98.05)/100
r.adj = 1 - (n-1)/(n-k-1)*(1-r.sq); r.adj
r.sq = c(0, r.sq); r.sq
f.k = sapply(2:length(r.sq), function(k)
(n-k-1)*(r.sq[k] - r.sq[k-1])/(1-r.sq[k])); f.k
qf(1-0.05, 1, 1:5)
qf(1-0.01, 1, 1:5)
model = plsr(Y ~ 0 + .,
3, data = dat.stan, validation = 'CV')
coef(model)
coef(model)
plot(fitted(model)[,,3], dat.stan[,1])
fitted(model)
dat.stan
plot(fitted(model)[,,3], resid(model)[,,3])
hist(resid(model)[,,3])
plot(fitted(model)[,,3], resid(model)[,,3])
coef(model)
require(glmnet)
x = as.matrix(dat.stan[, -1])
x
model = cv.glmnet(x, dat.stan[,1], intercept = FALSE)
plot(model)
model$lambda.min
log(0.008250187)
summary(model)
coef(model)
coef(model)
fitted. = predict(model, newx = x)
fitted.
plot(fitted., dat.stan[,1])
res = dat.stan[,1] - fitted.
plot(fitted., res)
hist(res)
plot(fitted., dat.stan[,1])
coef(model)
lambda = c(19, 3, 1, .7, .3)
e.beta = c(.8, .3, .2, .2, .1)
sig.sq = 2.5
k.seq = seq(0, 1000, 1)
l.foo = function(k, sig.sq, lambda, e.beta)
{
sig.sq * sum( lambda^2 / (k+lambda)^2 ) +
k^2 * sum( e.beta^2*lambda / (k+lambda)^2 )
}
l.eval = sapply(k.seq, function(k)
l.foo(k, sig.sq, lambda, e.beta))
plot(k.seq, l.eval)
l.opt = optimize(l.foo, c(0, 100), sig.sq, lambda, e.beta); l.opt
lambda = c(19, 3, 1, .7, .3)
e.beta = c(.8, .3, .2, .2, .1)
sig.sq = 2.5
k.seq = seq(0, 1000, 1)
l.foo = function(k, sig.sq, lambda, e.beta)
{
sig.sq * sum( lambda / (k+lambda)^2 ) +
k^2 * sum( e.beta^2 / (k+lambda)^2 )
}
l.eval = sapply(k.seq, function(k)
l.foo(k, sig.sq, lambda, e.beta))
plot(k.seq, l.eval)
l.opt = optimize(l.foo, c(0, 100), sig.sq, lambda, e.beta); l.opt
lambda = c(19, 3, 1, .7, .3)
e.beta = c(.8, .3, .2, .2, .1)
sig.sq = 2.5
k.seq = seq(0, 1000, 1)
d.foo = function(k, sig.sq, lambda, e.beta)
{
sig.sq * sum( lambda / (k+lambda)^2 ) +
k^2 * sum( e.beta^2 / (k+lambda)^2 )
}
d.eval = sapply(k.seq, function(k)
d.foo(k, sig.sq, lambda, e.beta))
plot(k.seq, d.eval)
d.opt = optimize(d.foo, c(0, 100), sig.sq, lambda, e.beta); d.opt
d.foo(0, sig.sq, lambda, e.beta)
d_0 = d.foo(0, sig.sq, lambda, e.beta); d_0
d_0 = d.foo(0.346172, sig.sq, lambda, e.beta); d_0
d_0 = d.foo(11.94841, sig.sq, lambda, e.beta); d_0
d.opt
l_0 = l.foo(0, sig.sq, lambda, e.beta); l_0
l.opt
lambda = c(19, 3, 1, .7, .3)
e.beta = c(.8, .3, .2, .2, .1)
sig.sq = 2.5
k.seq = seq(0, 1000, 1)
### b
l.foo = function(k, sig.sq, lambda, e.beta)
{
sig.sq * sum( lambda^2 / (k+lambda)^2 ) +
k^2 * sum( e.beta^2*lambda / (k+lambda)^2 )
}
l.eval = sapply(k.seq, function(k)
l.foo(k, sig.sq, lambda, e.beta))
plot(k.seq, l.eval)
l.opt = optimize(l.foo, c(0, 100), sig.sq, lambda, e.beta); l.opt
l_0 = l.foo(0, sig.sq, lambda, e.beta); l_0
l.opt
