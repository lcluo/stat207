means = with(dat, by(Y, A, mean))
D1 = means[1] - means[2]
D2 = means[1] - means[3]
D3 = means[2] - means[3]
D1
D2
D3
tukey = 1/sqrt(2)*qtukey(0.95,3,48)
tukey
summary(model)
a = unique(dat$A)
a
a = length(unique(dat$A))
a
b = length(unique(dat$B))
n = length(unique(dat$k))
b
n
p = summary(model)
p
sqrt(23.6/5/4)
23.6/20
sqrt(1.18)
sqrt(1.18*2)
s = sqrt(2*mse/(b*n))
s
mse = 23.6
s = sqrt(2*mse/(b*n))
s
c(D1-s*tukey, D1+s*tukey)
c(D2-s*tukey, D2+s*tukey)
c(D3-s*tukey, D3+s*tukey)
means = with(dat, by(Y, c(A,B), mean))
means = with(dat, by(Y, c(A,B) , mean))
means = with(dat, by(Y, list(A,B) , mean))
means
means[1]
means[1][2]
means[1,1]
means[1,2]
means[1,3]
means[1,4]
means[2,1]
means[2,4]
means[3,4]
means = with(dat, by(Y, list(A,B) , mean))
D1 = means[1,1] - means[1,2]
D2 = means[1,1] - means[1,3]
D3 = means[1,1] - means[1,4]
D4 = means[1,2] - means[1,3]
D5 = means[1,2] - means[1,4]
D6 = means[1,3] - means[1,4]
D1
D2
D3
D4
(n-1)*a*b
B = qf(1-0.05/(2*6), (n-1)*a*b)
B = qt(1-0.05/(2*6), (n-1)*a*b)
B
s = sqrt(2*mse/(n))
s
means = with(dat, by(Y, list(A,B) , mean))
D1 = means[1,1] - means[1,2]
D2 = means[1,1] - means[1,3]
D3 = means[1,1] - means[1,4]
D4 = means[1,2] - means[1,3]
D5 = means[1,2] - means[1,4]
D6 = means[1,3] - means[1,4]
B = qt(1-0.05/(2*6), (n-1)*a*b)
B
mse = 23.6
s = sqrt(2*mse/(n))
s
c(D1-s*B, D1+s*B)
c(D2-s*B, D2+s*B)
c(D3-s*B, D3+s*B)
c(D4-s*B, D4+s*B)
c(D5-s*B, D5+s*B)
c(D6-s*B, D6+s*B)
L_hat = (means[1,1]+means[1,2]+means[1,3])/3 - means[1,4]
L_hat
s = sqrt(mse/(n)*((1/3)^2*3+1))
s
t = qt(0.95, a*b*(n-1))
t
t = qt(1-0.05/2, a*b*(n-1))
t
a
b
4*4*3
a*b*(n-1)
t = qt(1-0.01/2, a*b*(n-1))
t
c(L_hat-s*t, L_hat+s*t)
p
p[2]
p[1]
p[1][1]
p[1][2]
p[1,]
p[1][1,]
p[1,]
p[1,1]
s_square = (252.5-23.6)/n
s_square
model_new = aov(Y ~ A+ ERROR(A/B), data = dat)
model_new = aov(Y ~ A+ ERR(A/B), data = dat)
model_new = aov(Y ~ A+ Error(A/B), data = dat)
summary(model_new)
qf(0.09,9,48)
qf(0.9,9,48)
qf(1.765318,9,48)
1-qf(1.765318,9,48)
1-pf(1.765318,9,48)
1-pf(10.7,9,48)
c1=1/5
c2=-1/5
ms1=252.5
ms2=23.6
df1=9
df2=48
F1=qf(.995,df1,Inf)
F2=qf(.995,df2,Inf)
F3=qf(.995,Inf,df1)
F4=qf(.995,Inf,df2)
F5=qf(.995,df1,df2)
F6=qf(.995,df2,df1)
G1=1-1/F1
G2=1-1/F2
G3=((F5-1)^2-(G1*F5)^2-(F4-1)^2)/F5
G4=F6*( ((F6-1)/F6)^2 - ((F3-1)/F6)^2 - G2^2 )
Hl = sqrt( (G1*c1*ms1)^2 + ((F4-1)*c2*ms2)^2 - G3*c1*c2*ms1*ms2)
Hl
Hu = sqrt( (G2*c2*ms2)^2 + ((F3-1)*c1*ms1)^2 - G4*c1*c2*ms1*ms2)
Hu
sigma_mu =  (ms1-ms2)/(n)
c(max(0,sigma_mu-Hl), sigma_mu+Hu)
sigma_mu
G1
F1
c1=1/5
c2=-1/5
ms1=252.5
ms2=23.6
df1=9
df2=48
F1=qf(.95,df1,Inf)
F2=qf(.95,df2,Inf)
F3=qf(.95,Inf,df1)
F4=qf(.95,Inf,df2)
F5=qf(.95,df1,df2)
F6=qf(.95,df2,df1)
G1=1-1/F1
G2=1-1/F2
G3=((F5-1)^2-(G1*F5)^2-(F4-1)^2)/F5
G4=F6*( ((F6-1)/F6)^2 - ((F3-1)/F6)^2 - G2^2 )
Hl = sqrt( (G1*c1*ms1)^2 + ((F4-1)*c2*ms2)^2 - G3*c1*c2*ms1*ms2)
Hl
Hu = sqrt( (G2*c2*ms2)^2 + ((F3-1)*c1*ms1)^2 - G4*c1*c2*ms1*ms2)
Hu
sigma_mu =  (ms1-ms2)/(n)
c(max(0,sigma_mu-Hl), sigma_mu+Hu)
847.8/252.5
summary(model_new)
qf(0.9,2,9)
1-pf(3.357624,2,9)
s = sqrt(2*msb_a/(b*n))
s
c(D1-s*tukey, D1+s*tukey)
means = with(dat, by(Y, A, mean))
D1 = means[1] - means[2]
D2 = means[1] - means[3]
D3 = means[2] - means[3]
tukey = 1/sqrt(2)*qtukey(0.95, 3, 48)
tukey
msb_a = 252.5
s = sqrt(2*msb_a/(b*n))
s
c(D1-s*tukey, D1+s*tukey)
c(D2-s*tukey, D2+s*tukey)
c(D3-s*tukey, D3+s*tukey)
tukey = 1/sqrt(2)*qtukey(0.9, 3, 48)
tukey
tukey = 1/sqrt(2)*qtukey(0.9, 3, 9)
tukey
tukey = 1/sqrt(2)*qtukey(0.9, 2, 9)
tukey
tukey = 1/sqrt(2)*qtukey(0.9, 4, 9)
tukey
tukey = 1/sqrt(2)*qtukey(0.9, 3, 9)
tukey
msb_a = 252.5
s = sqrt(2*msb_a/(b*n))
s
c(D1-s*tukey, D1+s*tukey)
c(D2-s*tukey, D2+s*tukey)
c(D3-s*tukey, D3+s*tukey)
-12.35-2.348*5.025
dat_re = dat
dat_reg = dat
means
dat_reg$Y[dat_reg$B==1]
dat_reg$Y[dat_reg$A==1] = dat_reg$Y[dat_reg$A==1]-means[1]
dat_reg$Y[dat_reg$A==2] = dat_reg$Y[dat_reg$A==2]-means[2]
dat_reg$Y[dat_reg$A==3] = dat_reg$Y[dat_reg$A==3]-means[3]
dat_reg = dat
dat_reg$Y[dat_reg$A==1] = dat_reg$Y[dat_reg$A==1]-means[1]
dat_reg$Y[dat_reg$A==2] = dat_reg$Y[dat_reg$A==2]-means[2]
dat_reg$Y[dat_reg$A==3] = dat_reg$Y[dat_reg$A==3]-means[3]
model_fi = aov(Y ~ A + Error(A/B), data = dat_reg)
summary(model_fi)
dat_reg = dat
dat_reg = dat
med1 = median(dat_reg$Y[dat_reg$A==1])
med2 = median(dat_reg$Y[dat_reg$A==2])
med3 = median(dat_reg$Y[dat_reg$A==3])
med1
med2
med3
dat_reg = dat
dat_reg
b
d = abs(dat_reg$Y - c(rep(med1,20),rep(med2,20),rep(med3,20)))
model_fi = aov(d ~ factor(dat_reg$A))
summary(model_fi)
med1 = median(dat_reg$Y[dat_reg$A==1])
med2 = median(dat_reg$Y[dat_reg$A==2])
med3 = median(dat_reg$Y[dat_reg$A==3])
d = abs(dat_reg$Y - c(rep(med1,20),rep(med2,20),rep(med3,20)))
model_fi = aov(d ~ factor(dat_reg$A))
summary(model_fi)
med2
dat_reg = dat
med1 = median(dat_reg$Y[dat_reg$B==1])
med2 = median(dat_reg$Y[dat_reg$B==2])
med3 = median(dat_reg$Y[dat_reg$B==3])
d = abs(dat_reg$Y - c(rep(med1,20),rep(med2,20),rep(med3,20)))
model_fi = aov(d ~ factor(dat_reg$A))
summary(model_fi)
med1
med2
dat_reg = dat
med1 = median(dat_reg$Y[dat_reg$A==1])
med2 = median(dat_reg$Y[dat_reg$A==2])
med3 = median(dat_reg$Y[dat_reg$A==3])
med2
med1
med3
model_fi = aov(d ~ factor(dat_reg$B))
summary(model_fi)
model_fi = aov(d ~ factor(dat_reg$A))
summary(model_fi)
qf(0.99,2,9)
model_fi = aov(d ~ factor(dat_reg$A) + Error(A/B))
model_fi = aov(d ~ factor(dat_reg$A) + Error(dat_reg$A/dat_reg$B))
summary(model_fi)
109.85/34.02
stripchart(Y ~ A, data = dat, subset = B == '1', pch = 1)
means.a = as.numeric(with(dat, by(Y, A, mean)))
means.ab = with(dat, by(Y, list(A, B), mean))
means.ab.mx = matrix(means.ab, ncol = a, byrow =  TRUE)
means.ab.mx
betas = sapply(1:a,
function(i)
means.ab.mx[,i] - means.a[i])
betas = as.numeric(betas); betas
library('lawstat')
levene.test(betas, c(rep(1,b), rep(2,b), rep(3,b)))
install.packages("lawstat")
library('lawstat')
levene.test(betas, c(rep(1,b), rep(2,b), rep(3,b)))
betas
med1 = median(dat_reg$Y[dat_reg$A==1])
med1
means.a = as.numeric(with(dat, by(Y, A, mean)))
means.ab = with(dat, by(Y, list(A, B), mean))
means.ab.mx = matrix(means.ab, ncol = a, byrow =  TRUE)
means.ab.mx
betas = sapply(1:a,
function(i)
means.ab.mx[,i] - means.a[i])
betas = as.numeric(betas)
betas
median(means.ab.mx[,1])
means.a = as.numeric(with(dat, by(Y, A, mean)))
means.ab = with(dat, by(Y, list(A, B), mean))
means.ab.mx = matrix(means.ab, ncol = a, byrow =  TRUE)
means.ab.mx
betas = sapply(1:a,
function(i)
means.ab.mx[,i] - median(means.ab.mx[,i]))
betas = as.numeric(betas)
betas
67.8-62.2
b
aov(betas ~ c(rep(1,b), rep(2,b), rep(3,b)))
c(rep(1,b), rep(2,b), rep(3,b))
aov(betas ~ factor(rep(1,b), rep(2,b), rep(3,b)))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b)))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
factor(c(rep(1,b), rep(2,b), rep(3,b))
)
betas
lm(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
anova(lm(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b)))))
rep(1:4,3)
rep(1:4,3)
aov(betas ~ factor(rep(1:4,3))))
aov(betas ~ factor(rep(1:4,3)))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
454.46/9
aov(betas ~ (c(rep(1,b), rep(2,b), rep(3,b))))
494.5017/10
aov(betas ~ rep(1:4,3))
aov(betas ~ factor(rep(1:4,3)))
396.3467/8
aov(betas ~ factor(rep(1:3,4)))
235.595/9
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b)))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
levene.test(betas, c(rep(1,b), rep(2,b), rep(3,b)))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
20.443/(454.46/9)
betas = sapply(1:a,
function(i)
means.ab.mx[,i] - median(means.ab.mx[,i]))
betas
apply(betas,1,mean)
apply(betas,2,mean)
meanp = apply(betas, 2, mean)
meanp = apply(betas, 2, mean)
meant = mean(meanp)
meant
sstr_d = sapply(1:3, function(x) b*(meanp[x]-meant))
sstr_d
sum(sstr_d)
sstr_d = sapply(1:3, function(x) b*(meanp[x]-meant)^2)
sum(sstr_d)
betas = sapply(1:a,
function(i)
means.ab.mx[,i] - median(means.ab.mx[,i]))
betas = as.numeric(betas)
betas
abs(betas)
means.a = as.numeric(with(dat, by(Y, A, mean)))
means.ab = with(dat, by(Y, list(A, B), mean))
means.ab.mx = matrix(means.ab, ncol = a, byrow =  TRUE)
means.ab.mx
betas = sapply(1:a,
function(i)
means.ab.mx[,i] - median(means.ab.mx[,i]))
betas = abs(as.numeric(betas))
aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
342.14/9
betas
model_brown = aov(betas ~ factor(c(rep(1,b), rep(2,b), rep(3,b))))
summary(model_brown)
t = split(dat, dat$B)
T
dat
t = split(dat, dat$A)
t
means = with(dat, by(Y, list(A, B), mean))
means
mean(means)
means[1,:]
means[1,]
means = with(dat, by(Y, list(A, B), mean))
means_A = with(dat, by(Y, list(A), mean))
sapply(1:3, function(x){
n*sum(means[x,]-means_A[x])
})
means = with(dat, by(Y, list(A, B), mean))
means_A = with(dat, by(Y, list(A), mean))
sapply(1:3, function(x){
n*sum((means[x,]-means_A[x])^2)
})
ppp =   sapply(1:3, function(x){
n*sum((means[x,]-means_A[x])^2)
})
ppp/3
dat = read.table("CH26PR19.txt")
dat
dat = read.table("CH26PR19.txt")
names(dat) = c("Y", "A", "B", "k")
dat$A = factor(dat$A)
dat$B = factor(dat$B)
a = length(unique(dat$A))
b = length(unique(dat$B))
n = length(unique(dat$k))
n
b
dat
model = aov(Y ~ Error(A)+Error(A/B), data = dat)
model = aov(Y ~ Error(A/B), data = dat)
summary(model)
model = aov(Y ~ Error(A/B), data = dat)
resid(model)
model
model = aov(Y ~ Error(A/B), data = dat)
resid(model)
dat = read.table("CH26PR19.txt")
names(dat) = c("Y", "A", "B", "k")
dat$A = factor(dat$A)
dat$B = factor(dat$B)
a = length(unique(dat$A))
b = length(unique(dat$B))
n = length(unique(dat$k))
model = aov(Y ~ Error(A/B), data = dat)
resid(model)
par( mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
model = aov(Y ~ Error(A/B), data = dat)
summary(model)
resid(model)
model = aov(Y ~ (A/B), data = dat)
resid(model)
plot(model, which = 1)
plot(model, which = 2)
model_final = aov(Y ~ Error(A/B), data = dat)
model_final = aov(Y ~ Error(A/B), data = dat)
summary(model_final)
114.4/23.43
qf(1-0.05, 3, 8)
pf(4.882629, 3, 8, lower.tail = FALSE)
23.43/0.1264
qf(1-0.05, 8, 24)
pf(185.3639, 8, 24, lower.tail = FALSE)
114.4 /(a*b*n)
sqrt(114.4 /(a*b*n))
qt(0.975,2)
Y_mean = mean(dat)
Y_mean
dat
Y_mean = mean(dat$Y)
Y_mean
Y_mean = mean(dat$Y)
t = qt(1-0.01/2, 2)
t
MSTR = 114.4
s = sqrt(MSTR/(a*b*n))
s
t = qt(1-0.05/2, 2)
t
Y_mean = mean(dat$Y)
Y_mean
t = qt(1-0.05/2, 3)
t
MSTR = 114.4
s = sqrt(MSTR/(a*b*n))
s
c(Y_mean-s*t, Y_mean+s*t)
summary(model.fianl)
summary(model.final)
summary(model.final)
model_final = aov(Y ~ Error(A/B), data = dat)
summary(model_final)
a
b
c
n
(114.4-23.43)/(3*3)
(23.43-0.1264)/(3)
c1=1/9
c2=-1/9
ms1=114.4
ms2=23.43
df1=3
df2=8
F1=qf(.90,df1,Inf)
F2=qf(.90,df2,Inf)
F3=qf(.90,Inf,df1)
F4=qf(.90,Inf,df2)
F5=qf(.90,df1,df2)
F6=qf(.90,df2,df1)
G1=1-1/F1
G2=1-1/F2
G3=((F5-1)^2-(G1*F5)^2-(F4-1)^2)/F5
G4=F6*( ((F6-1)/F6)^2 - ((F3-1)/F6)^2 - G2^2 )
Hl = sqrt( (G1*c1*ms1)^2 + ((F4-1)*c2*ms2)^2 - G3*c1*c2*ms1*ms2)
Hl
Hu = sqrt( (G2*c2*ms2)^2 + ((F3-1)*c1*ms1)^2 - G4*c1*c2*ms1*ms2)
Hu
sigma_mu =  (ms1-ms2)/(b*n)
c(max(0,sigma_mu-Hl), sigma_mu+Hu)
c1=1/9
c2=-1/9
ms1=114.4
ms2=23.43
df1=3
df2=8
F1=qf(.95,df1,Inf)
F2=qf(.95,df2,Inf)
F3=qf(.95,Inf,df1)
F4=qf(.95,Inf,df2)
F5=qf(.95,df1,df2)
F6=qf(.95,df2,df1)
G1=1-1/F1
G2=1-1/F2
G3=((F5-1)^2-(G1*F5)^2-(F4-1)^2)/F5
G4=F6*( ((F6-1)/F6)^2 - ((F3-1)/F6)^2 - G2^2 )
Hl = sqrt( (G1*c1*ms1)^2 + ((F4-1)*c2*ms2)^2 - G3*c1*c2*ms1*ms2)
Hl
Hu = sqrt( (G2*c2*ms2)^2 + ((F3-1)*c1*ms1)^2 - G4*c1*c2*ms1*ms2)
Hu
sigma_mu =  (ms1-ms2)/(b*n)
c(max(0,sigma_mu-Hl), sigma_mu+Hu)
sigma_mu
