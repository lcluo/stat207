summary(model1)
anova(model1)
qf(1-0.01,1,13)
pf(2.0204, 1, 13)
pf(2.0204, 1, 13, lower.tail = FALSE)
summary(model)
require("lme4")
dat = read.table("CH27PR06.txt")
names(dat) = c("Y", "S", "A")
dat1 = dat
dat$A = factor(dat$A)
dat$S = factor(dat$S)
s = length(unique(dat$S))
a = length(unique(dat$A))
model = aov(Y~ A + Error(S/A), data = dat)
res = residuals.aovlist(model)
res
summary(model)
proj(model)
summary(model)
model1 = lm(Y~factor(A)+factor(S)+ab, data = dat1)
anova(model1)
model1 = aov(Y~factor(A)+Error(factor(S)/factor(A))+ab, data = dat1)
anova(model1)
model1 = aov(Y~factor(A)+factor(S)+ab, data = dat1)
qf(.95,2,14)
qf(49.35, 2, 14)
qf(1-0.05, 2, 14)
pf(49.35, 2, 14)
pf(49.35, 2, 14, lower.tail = FALSE)
means = with(dat, by(Y, A, mean))
D1 = means[1] - means[2]
D2 = means[1] - means[3]
D3 = means[2] - means[3]
D
D1
means
tukey = 1/sqrt(2)*qtukey(0.95, a, 14)
tukey
anova = summary(model)
anova
mstr.s = 0.68
s = sqrt(2*mstr.s/(s))
s
s = length(unique(dat$S))
mstr.s = 0.68
s = sqrt(2*mstr.s/(r))
r = length(unique(dat$S))
r
s = sqrt(2*mstr.s/(r))
s
0.68375*2/8
mstr.s = 0.68375
s = sqrt(2*mstr.s/(r))
s
mstr.s = 0.68
s = sqrt(2*mstr.s/(r))
s
c(D1-s*tukey, D1+s*tukey)
c(D2-s*tukey, D2+s*tukey)
c(D3-s*tukey, D3+s*tukey)
D1
D2
D3
tukey
anova
ms1=106.5
ms2 = .68
(a-1)*ms1+a*(r-1)*ms2
((a-1)*ms1+a*(r-1)*ms2)/((a*r-1)ms2)
((a-1)*ms1+a*(r-1)*ms2)/((a*r-1)*ms2)
(106{106.5-0.68}{8*0.68})
{106.5-0.68}/{8*0.68}
pp = {106.5-0.68}/{8}
pp
ms2
pp/(pp+ms2)
r
a
((r-1)*ms1+r*(a-1)*ms2)/((a*r-1)*ms2)
model = avo(Y~ A + S, data = dat)
res = resid(model)
res
model = aov(Y~ A + S, data = dat)
res = resid(model)
res
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
stripchart(res ~ dat$A, method = 'stack')
model = aov(Y~ A + Error(S/A), data = dat)
summary(model)
model1 = aov(Y~factor(A)+factor(S)+ab, data = dat1)
anova(model1)
dat = read.table("CH27PR18.txt")
dat
s = length(unique(dat$S))
s
@
dat = read.table("CH27PR18.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
s
a = length(unique(dat$S))
b = length(unique(dat$S))
model = aov(Y~ S+A+B+A*B, data = dat)
res = resid(model)
res
model = aov(Y~ S+A+B, data = dat)
resid(model)
model = aov(Y~ S+A*B, data = dat)
resid(model)
model = aov(Y~ S+A+B+A*B, data = dat)
summary(model)
s
a
b
dat$A
dat$B
model = aov(Y~ S+A+B+I(A*B), data = dat)
dat$A*dat$B
model = aov(Y~ S+A+B+A*B, data = dat)
model
summary(model)
interaction.plot(dat$A, dat$Y)
interaction.plot(dat$Y, dat$A, dat$S)
interaction.plot(dat$Y, dat$A, dat$S)
interaction.plot(dat$A, dat$Y, dat$S)
interaction.plot(dat$A, dat$S, dat$Y)
interaction.plot(dat$S, dat$A, dat$Y)
dat = read.table("CH27PR06.txt")
names(dat) = c("Y", "S", "A")
dat1 = dat
dat$A = factor(dat$A)
dat$S = factor(dat$S)
r = length(unique(dat$S))
a = length(unique(dat$A))
model = aov(Y~ A + S, data = dat)
res = resid(model)
res
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
interaction.plot(dat$S, dat$A, dat$Y)
model = aov(Y~ S+A*B, data = dat)
resid(model)
dat = read.table("CH27PR18.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
a = length(unique(dat$a))
b = length(unique(dat$b))
model = aov(Y~ S+A*B, data = dat)
resid(model)
model = aov(Y~ S+A*B+A*S+B*S, data = dat)
resid(model)
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
stripchart(Y ~ S, data = dat, subset = list(A=='1'&&B == '1'), pch = 1)
stripchart(Y ~ S, data = dat, subset = c(A=='1'&&B == '1'), pch = 1)
stripchart(Y ~ S, data = dat, subset = A=='1'&&B == '1', pch = 1)
stripchart(Y ~ S, data = dat, subset = A=='1'&B == '1', pch = 1)
a=0 & b=1
a=0 && b=1
a==0 && b==1
a==0 & b==1
a
b
a==0 & b==1
b==1
b=1
a==0 && b==1
a==0 & b==1
stripchart(Y ~ S, data = dat, subset = (A == '1' && B == '1'), pch = 1)
%%
?&&
stripchart(Y ~ S, data = dat, subset = (A == '1' & B == '1'), pch = 1)
dat
stripchart(Y ~ A, data = dat, subset = B == '2', pch = 2,
add = TRUE)
stripchart(Y ~ , data = dat, subset = (A == '1' & B == '1'), pch = 1)
stripchart(Y, data = dat, subset = (A == '1' & B == '1'), pch = 1)
stripchart(Y ~ S, data = dat, subset = (A == '1' & B == '1'), pch = 1)
stripchart(S ~ Y, data = dat, subset = (A == '1' & B == '1'), pch = 1)
stripchart(Y ~ S, data = dat, subset = (A == '1' & B == '1'), pch = 1)
stripchart(w1$vals,method="jitter")
stripchart(dat$Y,method="jitter")
stripchart(dat$Y ~ dat$A*dat$B, method="jitter")
stripchart(dat$Y ~ dat$A*dat$B, method="stack")
stripchart(dat$Y ~ dat$A*dat$B, method="stack")
model = aov(Y~ A*B+A*S+B*S+ Error(S/(A*B)), data = dat)
summary(model)
qf(1-0.005, 1, 9)
pf(0.053, 1, 9, lower.tail = FALSE)
3.0250/0.2261
qf(1-0.05, 1, 9)
pf(13.37904, 1, 9, lower.tail = FALSE)
11.449/0.562
pf(20.37189, 1, 9, lower.tail = FALSE)
means = with(dat, by(Y, list(A,B) , mean))
means
D1 = means[2,1] - means[1,1]
D2 = means[1,2] - means[1,1]
D3 = means[2,1] - means[1,2]
D4 = means[2,2] - means[1,1]
D1
msabs = 0.01878
S = sqrt(2*msabs/(s))
S
B = qt(1-0.05/(2*4), 9)
B
D1
means = with(dat, by(Y, list(A,B) , mean))
D1 = means[2,1] - means[1,1]
D2 = means[1,2] - means[1,1]
D3 = means[2,1] - means[1,2]
D4 = means[2,2] - means[1,1]
B = qt(1-0.05/(2*4), 9)
B
msabs = 0.01878
S = sqrt(2*msabs/(s))
S
c(D1-S*B, D1+S*B)
c(D2-S*B, D2+S*B)
c(D3-S*B, D3+S*B)
c(D4-S*B, D4+S*B)
dat = read.table("CH27PR20.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
a = length(unique(dat$a))
b = length(unique(dat$b))
s
a
b
model = aov(Y~ A*B+(A/S), data = dat)
resid(model)
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
dat = read.table("CH27PR18.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
a = length(unique(dat$A))
b = length(unique(dat$B))
model = aov(Y~ S+A*B+A*S+B*S, data = dat)
resid(model)
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
dat = read.table("CH27PR06.txt")
names(dat) = c("Y", "S", "A")
dat1 = dat
dat$A = factor(dat$A)
dat$S = factor(dat$S)
r = length(unique(dat$S))
a = length(unique(dat$A))
model = aov(Y~ A + S, data = dat)
res = resid(model)
res
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
dat = read.table("CH27PR20.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
a = length(unique(dat$A))
b = length(unique(dat$B))
model = aov(Y~ A*B+(A/S), data = dat)
resid(model)
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
interaction.plot(with(dat, A, B, S))
interaction.plot(with(dat, A, S, B))
interaction.plot(with(dat, S, A, B))
interaction.plot(with(dat, S, A, Y))
interaction.plot(dat$S, dat$S, dat$A, dat$Y))
interaction.plot(dat$S, dat$S, dat$A, dat$Y)
interaction.plot(dat$S, dat$A, dat$Y)
interaction.plot(dat$B, dat$S, dat$Y)
interaction.plot(dat$B, dat$S, dat$Y, lty = 1)
interaction.plot(dat$B, dat$S, dat$Y[dat$A==1], lty = 1)
dat[A==1]
dat[dat$A==1]
dat1 = dat[ which(dat$A==1) ]
which(dat$A==1)
dat1 = dat[ which(dat$A==1), ]
dat1
dat2 = dat[ which(dat$A==2), ]
dat2
par( mfrow = c(1, 2))
par( mfrow = c(1, 2))
interaction.plot(dat1$B, dat1$S, dat1$Y, lty = 1)
interaction.plot(dat2$B, dat2$S, dat2$Y, lty = 1)
model = aov(Y~ A*B+Error(A/S), data = dat)
summary(model)
qf(1-0.05, 1, 8)
pf(0.033, 1, 8, lower.tail = FALSE)
1394/104.7
qf(1-0.05, 1, 8)
13.31423
pf(13.31423, 1, 8, lower.tail = FALSE)
68.45/1.5
pf(45.63333, 1, 8, lower.tail = FALSE)
means1 = with(dat, by(Y, A , mean))
means2 = with(dat, by(Y, B , mean))
means1
means2 = with(dat, by(Y, B , mean))
means2
L1 = means1[1] - means1[2]
L2 = means2[1] - means2[2]
L1
L2
B = qt(1-0.1/(2*2), 9)
B
S1 = sqrt(2*msb.wa/(b*s))
S2 = sqrt(2*msb.wa/(a*s))
msb.wa = 1.5
S1 = sqrt(2*msb.wa/(b*s))
S2 = sqrt(2*msb.wa/(a*s))
S1
S2 = sqrt(2*msb.wa/(a*s))
S2
a
b
mswa = 104.7
S1 = sqrt(2*mswa/(b*s))
S1
c(L1-S1*B, L1+S1*B)
c(L2-S2*B, L2+S2*B)
B = qt(1-0.1/(2*2), 8)
B
msb.wa = 1.5
mswa = 104.7
S1 = sqrt(2*mswa/(b*s))
S2 = sqrt(2*msb.wa/(a*s))
S1
S2
c(L1-S1*B, L1+S1*B)
c(L2-S2*B, L2+S2*B)
interaction.plot(dat$A, dat$S, dat$Y)
?plotCI
??plotCI
dat = read.table("CH27PR18.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
a = length(unique(dat$A))
b = length(unique(dat$B))
model = aov(Y~ S+A*B+A*S+B*S, data = dat)
resid(model)
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
interaction.plot(dat$A, dat$B, dat$Y)
?point
??point
point(dat$A, dat$Y)
points(dat$A, dat$Y)
interaction.plot(dat$A, dat$B, dat$Y)
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
points(dat1$A, dat1$Y, type = 1)
points(dat1$A, dat1$Y, type = 2)
dat = read.table("CH27PR18.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
a = length(unique(dat$A))
b = length(unique(dat$B))
model = aov(Y~ S+A*B+A*S+B*S, data = dat)
resid(model)
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
interaction.plot(dat$A, dat$B, dat$Y)
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
points(dat1$A, dat1$Y, type = 1)
dat1
points(dat1$A, dat1$Y, color = 1)
points(dat1$A, dat1$Y, color = 2)
points(dat1$A, dat1$Y, pch = 1)
points(dat1$A, dat1$Y, pch = 2)
interaction.plot(dat$A, dat$B, dat$Y)
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
points(dat1$A, dat1$Y, pch = 1)
points(dat2$A, dat2$Y, pch = 2)
means = with(dat, by(Y, list(A, B), mean))
means
means = with(dat, by(Y, list(S), mean))
means
interaction.plot(dat$A, dat$B, dat$Y)
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
points(dat1$A, dat1$Y, pch = 1)
points(dat2$A, dat2$Y, pch = 2)
interaction.plot(dat$A, dat$B, dat$Y)
dat1 = dat[ which(dat$A == 1), ]
dat2 = dat[ which(dat$A == 2), ]
points(dat1$A, dat1$Y, pch = 1)
points(dat2$A, dat2$Y, pch = 2)
dat
dat1
length(dat1)
dim(dat1)
dat1$A
dat1$Y
interaction.plot(dat$A, dat$B, dat$Y)
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
dat1$A
dat1$Y
point(1:2,4:4)
points(1:2,3:4)
points(c(1,2),c(2,5))
interaction.plot(dat$A, dat$B, dat$Y)
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
points(dat1$A, dat1$Y, pch = 1)
points(dat2$A, dat2$Y, pch = 2)
interaction.plot(dat$A, dat$B, dat$Y, ylim = c(1, 8))
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
points(dat1$A, dat1$Y, pch = 1)
points(dat2$A, dat2$Y, pch = 2)
dat = read.table("CH27PR20.txt")
names(dat) = c("Y", "S", "A", "B")
dat$S = factor(dat$S)
dat$A = factor(dat$A)
dat$B = factor(dat$B)
s = length(unique(dat$S))
a = length(unique(dat$A))
b = length(unique(dat$B))
model = aov(Y~ A*B+(A/S), data = dat)
resid(model)
par(mfrow = c(1,2))
plot(model, which = 1)
plot(model, which = 2)
min(dat$Y)
max(dat$Y)
interaction.plot(dat$A, dat$B, dat$Y, ylim = c(20, 80))
dat1 = dat[ which(dat$B == 1), ]
dat2 = dat[ which(dat$B == 2), ]
points(dat1$A, dat1$Y, pch = 1)
points(dat2$A, dat2$Y, pch = 2)
plot(5, 5, type="n", axes=FALSE, ann=FALSE, xlim=c(0, 10), ylim = c(0,10))
axis(1)
axis(2, las=2)
mtext("x-axis", side = 1, line = 3)
mtext("y-axis", side = 2, line = 3)
title("My progressive plot")
box()
points(5, 5, col="red")
points(5, 7, col="orange", pch=3, cex=2)
points(c(0, 0, 1), c(2, 4, 6), col="green", pch=4)
y.fit <- predict(mod, list(x = x.seq))
# This is essentially what `abline(mod)` has done, and so there is no point plotting these again.  However, using the `interval` argument, we can extract prediction and confidence intervals:
y.pred <- predict(mod, list(x = x.seq), interval = "prediction")
plot(5, 5, type="n", axes=FALSE, ann=FALSE, xlim=c(0, 10), ylim = c(0,10))
axis(1)
axis(2, las=2)
mtext("x-axis", side = 1, line = 3)
mtext("y-axis", side = 2, line = 3)
title("My progressive plot")
box()
points(5, 5, col="red")
points(5, 7, col="orange", pch=3, cex=2)
points(c(0, 0, 1), c(2, 4, 6), col="green", pch=4)
points(x, y, pch=21, col="white", bg="black")
abline(mod)
lines(x.seq, y.pred[,"lwr"], lty = 2)
lines(x.seq, y.pred[,"upr"], lty = 2)
pp = seq(0,10)
lines(pp)
pp = seq(0,10,.1)
lines(pp)
pp = seq(0,10,.2)
lines(pp)
pp = seq(0,10,1)
lines(pp)
lines(pp)
lines(pp)
pp = seq(0,10,0)
pp
lines(pp,0)
lines(pp,rep(0,10))
lines(pp,rep(0,11))
plot(c(-1, 6), c(0, 0), type = "2")
points(c(D1-s*tukey, D1+s*tukey), c(0, 0), pch = 1)
points(c(D2-s*tukey, D2+s*tukey), c(0, 0), pch = 1)
points(c(D3-s*tukey, D3+s*tukey), c(0, 0), pch = 1)
