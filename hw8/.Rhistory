plot(row, a3,"l",lty=4,main=NA,xlab=NA,ylab=NA)
par(new=TRUE)
plot(row, a4,"l",lty=5,main=NA,xlab=NA,ylab=NA)
par(new=TRUE)
plot(row, a5,"l",lty=6,main=NA,xlab=NA,ylab=NA)
points(row,y)
legend("bottomleft",legend=c("a1","a2","a3","a4","a5"),lty=2:6)
plot(row, a1,"l",lty=2, main="compare five methods", xlab="row number", ylab="harvest")
par(new=TRUE)
plot(row, a2,lty=3,main=NA,xlab=NA,ylab=NA,color=2)
par(new=TRUE)
plot(row, a3,"l",lty=4,main=NA,xlab=NA,ylab=NA,color=3)
par(new=TRUE)
plot(row, a1,"l",lty=2, main="compare five methods", xlab="row number", ylab="harvest")
par(new=TRUE)
plot(row, a2,"l",lty=3,main=NA,xlab=NA,ylab=NA,color=2)
legend("bottomleft",legend=c("a1","a2","a3","a4","a5"),colors=1:5)
plot(row, a1,"l",lty=2, main="compare five methods", xlab="row number", ylab="harvest")
par(new=TRUE)
plot(row, a2,"l",lty=3,main=NA,xlab=NA,ylab=NA,colors=2)
plot(row, a2,"l",lty=3,main=NA,xlab=NA,ylab=NA,colors="red")
plot(row, a1,"l",lty=2, main="compare five methods", xlab="row number", ylab="harvest")
par(new=TRUE)
plot(row, a2,"l",lty=3,main=NA,xlab=NA,ylab=NA,colors="red")
par(new=TRUE)
plot(row, a3,"l",lty=4,main=NA,xlab=NA,ylab=NA,colors=3)
par(new=TRUE)
plot(row, a4,"l",lty=5,main=NA,xlab=NA,ylab=NA,colors=4)
par(new=TRUE)
plot(row, a5,"l",lty=6,main=NA,xlab=NA,ylab=NA,colors=5)
points(row,y)
x=matrix(c(1,1,1,1,1,-.63,.18,-/84,1.6,.33,-.82,.49,.74,.58,-.31),c(3,5))
x=matrix(c(1,1,1,1,1,-.63,.18,-.84,1.6,.33,-.82,.49,.74,.58,-.31),c(3,5))
x
x=matrix(c(1,1,1,1,1,-.63,.18,-.84,1.6,.33,-.82,.49,.74,.58,-.31),c(5,3))
x
y=matrix(c(-.97,2.51,-.19,6.53,1),c(5,1))
y
t(x)%*%x
t(x)%*%y
solve(t(x)%*%x)
p=solve(t(x)%*%x)
q=t(x)%*%y
p%*%q
q=t(x)%*%x
x%*%P%*%t(x)
x%*%p%*%t(x)
library("MATRIX")
library("matrix")
require("matrix")
rankmatrix(h)
h=x%*%p%*%t(x)
install.packages("matrix")
library("Matrix", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
rankmatrix(h)
rankMatrix(h)
rankMatrix(I-h)
matrix(I)
I=diag(3)
I
I=diag(5)
rankMatrix(I-h)
h
I=diag(3) p=solve(t(x)%*%x)
> q=t(x)%*%y
> p%*%q
p=solve(t(x)%*%x)
> q=t(x)%*%y
> p%*%q
p=solve(t(x)%*%x)
q=t(x)%*%y
p%*%q
p=solve(t(x)%*%x)
q=t(x)%*%y
b= p%*%q
b
yhat=x%*%b
yhat
y-yhat
sum((y-yhat)^2)
sum((y-yhat)^2)/3
mse=sum((y-yhat)^2)/3
p=solve(t(x)%*%x)
p*mse
sqrt(0.064362708)
sqrt(0.088514115)
sqrt(0.18300942)
xx
xx=cbind(x,c(-.63*-.82,.18*.49,-.84*.74,1.6*.58,.33*-.31))
xx
yy=y
xx%*%(solve(t(xx)%*%xx))%*%t(xx)
hh=xx%*%(solve(t(xx)%*%xx))%*%t(xx)
rankMatrix(hh)
rankMatrix(hh)
yyhat=(solve(t(xx)%*%xx))%*%t(xx)%*%yy
bb=(solve(t(xx)%*%xx))%*%t(xx)%*%yy
bb
xx%*%bb
yyhat=xx%*%bb
yy-yyhat
ee=yy-yyhat
sum(ee^2)
sum(ee^2)/4
ã€‚36*2.14
.36*2.14
.66*.74
.66*1.91
.52*.51
.52*.41
xx=matrix(c(.087,-.014,.035,.004,-.014,.115,-.012,-.052,-.035,-.012,.057,-.014,-.004,-.052,-.014,.05),c(4,4))
xx
xx[3,1]=-xx[3,1]
xx[4,1]=-xx[4,1]
xx
xh=matrix(c(1,0,0,0),c(4,1))
xh
t(xh)%*%xx%*%xh
1:2
50:2.5
1.02^2
1.02^2*(1.087)
pt(0.975,26)
p=pt(0.975,26)
0.9918-p*1.130915
0.9918+p*1.130915
58.232+5.49+.448
58.232+5.49+.448
58.232+5.49+.44+27.48
ssto=91.642
ssto-58.232
5.49+0.448
58.232+5.49
ssto-63.722
matrix(c(1,2,3,4,5,6),c(3,2))
a=matrix(c(1,2,3,4,5,6),c(3,2))
solve(a)
1.0404*(1+0.087)
pt(0.975,26)
pt(.999,82)
qt(.999,82)
qt(.995,82)
27.048+.448+5.49
5.49+.448
a=5.49+.448
a=a/2
a/(27.048/26)
df(1,28)
pf(1,28)
qf(1,28)
qf(0,1,28)
qf(1,1,28)
qf(0,1,28)
pvalue()
?pvalue
??pvalue
?pf
qf(1-.01,2,26)
sqrt(1.0404*1.087)
sqrt(1.04*1.087)
0.9918-2.055529*1.063445
0.9918+2.055529*1.063445
100-10
77.382-21.818
.753/.98
.753/.9855
install.packages("patchDVI")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
choose(3,2)
choose(4,2)
choose(7,2)*(1/3)^2*(2/3)^5
choose(7,3)*(1/3)^3*(2/3)^4
choose(7,2)
choose(7,3)
choose(7,2)*(2/3)^2*(1/3)^5
choose(7,3)*(2/3)^3*(1/3)^4
e
??e
exp(-0.3)
exp(-0.3)*1.3
exp(-3.125)*(3.125^2/2)
exp(-3.125)*(3.125^3/6)
exp(-3.125)*(3.125^4/24)
0.2145+.2234+.1745
a=exp(-3.125)*(3.125^2/2)
b=exp(-3.125)*(3.125^3/6)
c=exp(-3.125)*(3.125^4/24)
a+b+c
exp(-2)*(28/3)
exp(-2)*(4)
extractAIC(fit, k=log(n))
fit2 = lm(Y~X1+ X2+ X4, data=data)
fds
llfdsf
a=1:3
names(a)=c("a","b","c")
match("a",a)
match("a",names(a))
match("c",names(a))
?sprintf
n <- 1:18
sprintf(paste0("e with %2d digits = %.", n, "g"), n, exp(1))
sprintf("min 10-char string '%10s'",
c("a", "ABC", "and an even longer one"))
sprintf("fuck","you")
sprintf("fuck",c("you"))
sprintf("fuck",c("you","fukc you"))
sprintf("fuck",c("you","fukc youffds"))
sprintf("fuck",c("you","fukc youffds,asd"))
sprintf("fuck",c("you","fukc youffds,asd,"fsd))
sprintf("fuck",c("you","fukc youffds,asd,"fsd""))
sprintf("fuck",c("you","fukc youffds,asd,"fsd"))
sprintf("fuck",c("you","fukc youffds,asd","fsd"))
sprintf("--%s",c("you","fukc youffds,asd","fsd"))
sprintf("asd",c("you","fukc youffds,asd","fsd"))
sprintf("qqw",c("you","fukc youffds,asd","fsd"))
sprintf("\n",c("you","fukc youffds,asd","fsd"))
grep("fuc","fuck",value=T)
grep("fuc","fuck",value=TRUE)
?rpart
??rpart
install.packages("rpart")
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mse = 2.125
sd = sqrt(2*mse/(2*1))
B = qt(1-0.05/(2*3),(4-1)*(2-1))
d1 = 6 -0
d2 = 13.5-6
d3 = 16-13.5
c(d1-sd*B,d1+sd*B)
c(d2-sd*B,d2+sd*B)
c(d3-sd*B,d3+sd*B)
B
S = sqrt((4-1)*qf(1-0.05,3,3))
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse/8*(4))
c(L-Sl*S, L+Sl*S)
S
S = sqrt((4-1)*qf(1-0.05,3,3))
S
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse)
c(L-Sl*S, L+Sl*S)
\qquad Therefore, the 95\% interval is [-19.440156, -4.059844].
\item
eyeC = read.table("eye-contact.txt", header = TRUE)
fit = lm(score ~ factor(gender) + factor(contact) + I(gender*contact) , eyeC)
fit$fit
fit$resid
plot(fit, which = 2)
plot(fit, which = 1)
mu11 = mean(subset(invest$score, invest$A==1)) + mean(subset(invest$score, invest$B==1))-mean(invest$score)
t = qt(1-0.05/2, 3)
s = sqrt(mse/1)
scale
??scale
qf(0.90,4,3)
1:16
sum(1:16)
a = matrix(c(1,0.6325,0.6325,1),2,2)
a
eigen(a)
.707*sqrt(1.6325)/1
setwd("~/Course/2015winter/stat 207/hw/hw8")
dat = read.table("CH14PR14.txt")
dat
dat = read.table("CH14PR14.txt")
names(dat) = c("Y", "X1", "X2", "X3")
rep(1:20,6)
a[159]
integer(a[159])
integer(a)
integer(a,159)
a=integer(159)
a[1]=1
cumsum(a)
a[10]=1
cumsum(a)
a
a=integer(159)
long(1)
long
?long
??long
??integer
logit = glm(Y ~ X1 + X2 , data = dat, family = "binomial")
logit
logit$effects
logit$fitted.values
a = logit$fitted.values
a/(1-a)
groupby
?group
?groupby
??groupby
??group
??split
cut(a,20)
cut(a)
cut(a,1)
cut(a,2)
sort(a)
order(a)
dat[order(a), ]
rep(1,rep(1:8))
rep(1:8,rep(1:8))
rep(20,rep(1:8))
rep(1:20,rep(1:8))
rep(rep(20,8),rep(1:8))
rep(1:8, rep(1:8))
rep(1:8, rep(8))
rep(rep(1:8), 20
)
rep(rep(1:8), 20)
?rep
rep(1,8)
rep(1:8,8)
rep(1,1:8)
rep(c(19,20,20,20,20,20,20,20),1:8)
rep(1:8,rep(8))
rep(1:8, each = 20)
a = rep(1:8, each = 20)
a[-1]
split(dat, a)
split(dat, a[-1])
a = logit$fitted.values
dat = dat[order(a/(1-a)), ]
dat
a = logit$fitted.values
dat = dat[order(a/(1-a)), ]
a = rep(1:8, each = 20)
split(dat, a[-1])
dat = dat[order(ln(a/(1-a))), ]
dat = dat[order(log(a/(1-a))), ]
a = logit$fitted.values
dat = dat[order(log(a/(1-a))), ]
a = rep(1:8, each = 20)
split(dat, a[-1])
dat = dat[order(a), ]
a = logit$fitted.values
dat = dat[order(a), ]
dat
a = logit$fitted.values
a
a = logit$fitted.values
dat = dat[order(a), ]
a = rep(1:8, each = 20)
split(dat, a[-1])
a = logit$fitted.values
dat = dat[order(log(a/(1-a))), ]
a = rep(1:8, each = 20)
split(dat, a[-1])
b = split(dat, a[-1])
table(b)
tapply(b)
summary(b)
b[1]
summary(b[1])
summary(b$1)
summary(b$8)
b$1
b$'1'
summary(b$'1')
summary(b$'8')
a = logit$fitted.values
dat = dat[order(a), ]
a = rep(1:8, each = 20)
b = split(dat, a[-1])
b
summary(b$'1')
b$'1'
a = logit$fitted.values
a
a = logit$fitted.values
dat = dat[order(log(a/(1-a)), ]
a = rep(1:8, each = 20)
b = split(dat, a[-1])
b
names(dat) = c("Y", "X1", "X2", "X3")
logit = glm(Y ~ X1 + X2 , data = dat, family = "binomial")
a = logit$fitted.values
dat = dat[order(a), ]
a = rep(1:8, each = 20)
b = split(dat, a[-1])
b
fitted(b)
fitted.values(b)
fitted.values(dat)
logitv = logit$fitted.values
split(sort(logitv), a)
tapply(split(sort(logitv), a), sum)
tapply(split(sort(logitv), a), sum)
split(sort(logitv), a)
sapply(split(sort(logitv), a), sum)
tapply(split(sort(logitv), a))
sapply(split(sort(logitv), a), sum)
Ej1 = sapply(split(sort(logitv), a), sum);Ej1
logitv = logit$fitted.values
dat = dat[order(logitv), ]
a = rep(1:8, each = 20)
a = a[-1]
b = split(dat, a)
Ej1 = sapply(split(sort(logitv), a), sum);Ej1
Oj1 = sapply(b, function(x){sum(x$Y)})
Oj1
b[1]
b[1]$Y
b$'1'$Y
sum(b$'1'$Y)
Oj1 = sapply(b, function(x){sum(x$Y)})
Oj1
Oj1 = sapply(1:8, function(x){sum(b$'x'$Y)})
Oj1
b[1]
b[1]$Y
b$1
b[1]
unlist(b[1])
b[1]
Oj1 = sapply(b, function(x){x})
Oj1
Oj1 = sapply(b, function(x){x[1]})
Oj1
Oj1 = sapply(b, function(x){sum(x[[1]])})
Oj1
logit = glm(Y ~ X1 + X2 , data = dat, family = "binomial")
logitv = logit$fitted.values
dat = dat[order(logitv), ]
a = rep(1:8, each = 20)
a = a[-1]
b = split(dat, a)
b
b[[1]]
b[[8]]
Oj1 = sapply(b, function(x){sum(x[[1]][1])})
Oj1
Oj1 = sapply(b, function(x){sum(x[[1]])})
Oj1
Oj0 = sapply(b, function(x){length(x[[1]])-sum(x[[1]])});Oj0
sapply(b, function(x){length(x[[1]]))
sapply(b, function(x){length(x[[1]])}
sapply(b, function(x){length(x[[1]])})
Ej0 = sapply(b, function(x){length(x[[1]])})-Ej1;Ej0
y = Ej1/sapply(b, function(x){length(x[[1]])})
y
x = sapply(b, median)
b
x = sapply(split(sort(logitv), a), median)
x
y = Ej1/sapply(b, function(x){length(x[[1]])})
plot(x, y)
rbind(Oj1, Ej1, Oj0, Ej0)
rbind(as.integer(Oj1), Ej1, Oj0, Ej0)
rbind(Oj1, Ej1, Oj0, Ej0)
X.squ = sum((rbind(Oj1, Oj0)-rbind(Ej1, Ej0))^2/rbind(Ej1, Ej0));X.squ
chisqu(0.95,5)
?chi
??chi
??chisquare
qchisq(0.95,5)
pchisq(12.11578,3)
pchisq(12.11578,3,lower.tail = TRUE)
pchisq(12.11578,3,lower.tail = FALSE)
pchisq(12.11578,5,lower.tail = FALSE)
qchisq(0.95,5)
?deviance
deviance(logit)
logit$deviance
logit$residuals
summary(logit)
p = summary(logit)
p$df.residual
p$deviance.resid
dr = p$deviance.resid;dr
b
dat
logitv
pi = exp(logitv)/(1+exp(logitv))
pi = exp(logitv)/(1+exp(logitv))
pi
line(lowess(dr ~ pi))
plot(lowess(dr ~ pi))
plot(lowess(pi ~ dr))
plot(lowess(dr ~ pi))
dat = read.table("CH14PR39.txt")
dat
names(dat) = c("Y", "X1", "X2", "X3", "X4")
logit = glm(Y ~ . , data = dat, family = "poisson")
poi = glm(Y ~ . , data = dat, family = "poisson")
summary(poi)
summary(poi)
poi$coefficients
summary(poi)
p = summary(poi)
p$deviance.resid
dr = p$deviance.resid;dr
plot(sort(dr))
logLik(poi)
poiR = glm(Y ~ .-X2 , data = dat, family = "poisson")
logLik(poiR)
-183.7194--183.6439
-0.0755*-2
qchisq(1-0.05, 5-4)
pchisq(0.151, 1, lower.tail = FALSE)
summary(poiR)
z = qnorm(1-0.05/2)
z
c(b1-s1*z, b1+s1*z)
b1 = -1.077770
s1 = 0.131415
z = qnorm(1-0.05/2)
c(b1-s1*z, b1+s1*z)
