77.382-21.818
.753/.98
.753/.9855
install.packages("patchDVI")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
choose(3,2)
choose(4,2)
choose(7,2)*(1/3)^2*(2/3)^5
choose(7,3)*(1/3)^3*(2/3)^4
choose(7,2)
choose(7,3)
choose(7,2)*(2/3)^2*(1/3)^5
choose(7,3)*(2/3)^3*(1/3)^4
e
??e
exp(-0.3)
exp(-0.3)*1.3
exp(-3.125)*(3.125^2/2)
exp(-3.125)*(3.125^3/6)
exp(-3.125)*(3.125^4/24)
0.2145+.2234+.1745
a=exp(-3.125)*(3.125^2/2)
b=exp(-3.125)*(3.125^3/6)
c=exp(-3.125)*(3.125^4/24)
a+b+c
exp(-2)*(28/3)
exp(-2)*(4)
extractAIC(fit, k=log(n))
fit2 = lm(Y~X1+ X2+ X4, data=data)
fds
llfdsf
a=1:3
names(a)=c("a","b","c")
match("a",a)
match("a",names(a))
match("c",names(a))
?sprintf
n <- 1:18
sprintf(paste0("e with %2d digits = %.", n, "g"), n, exp(1))
sprintf("min 10-char string '%10s'",
c("a", "ABC", "and an even longer one"))
sprintf("fuck","you")
sprintf("fuck",c("you"))
sprintf("fuck",c("you","fukc you"))
sprintf("fuck",c("you","fukc youffds"))
sprintf("fuck",c("you","fukc youffds,asd"))
sprintf("fuck",c("you","fukc youffds,asd,"fsd))
sprintf("fuck",c("you","fukc youffds,asd,"fsd""))
sprintf("fuck",c("you","fukc youffds,asd,"fsd"))
sprintf("fuck",c("you","fukc youffds,asd","fsd"))
sprintf("--%s",c("you","fukc youffds,asd","fsd"))
sprintf("asd",c("you","fukc youffds,asd","fsd"))
sprintf("qqw",c("you","fukc youffds,asd","fsd"))
sprintf("\n",c("you","fukc youffds,asd","fsd"))
grep("fuc","fuck",value=T)
grep("fuc","fuck",value=TRUE)
?rpart
??rpart
install.packages("rpart")
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mse = 2.125
sd = sqrt(2*mse/(2*1))
B = qt(1-0.05/(2*3),(4-1)*(2-1))
d1 = 6 -0
d2 = 13.5-6
d3 = 16-13.5
c(d1-sd*B,d1+sd*B)
c(d2-sd*B,d2+sd*B)
c(d3-sd*B,d3+sd*B)
B
S = sqrt((4-1)*qf(1-0.05,3,3))
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse/8*(4))
c(L-Sl*S, L+Sl*S)
S
S = sqrt((4-1)*qf(1-0.05,3,3))
S
L = (0+6)/2-(13.5+16)/2
Sl = sqrt(mse)
c(L-Sl*S, L+Sl*S)
\qquad Therefore, the 95\% interval is [-19.440156, -4.059844].
\item
eyeC = read.table("eye-contact.txt", header = TRUE)
fit = lm(score ~ factor(gender) + factor(contact) + I(gender*contact) , eyeC)
fit$fit
fit$resid
plot(fit, which = 2)
plot(fit, which = 1)
mu11 = mean(subset(invest$score, invest$A==1)) + mean(subset(invest$score, invest$B==1))-mean(invest$score)
t = qt(1-0.05/2, 3)
s = sqrt(mse/1)
scale
??scale
qf(0.90,4,3)
1:16
sum(1:16)
dat = read.table("CH14PR11.txt")
names(dat) = c("X", "n", "Y")
logit = glm(Y/n ~ X, data = dat, family = "binomial")
dat = read.table("CH14PR11.txt")
setwd("~/Course/2015winter/stat 207/hw/hw7")
dat = read.table("CH14PR11.txt")
names(dat) = c("X", "n", "Y")
logit = glm(Y/n ~ X, data = dat, family = "binomial")
summary(logit)
z = qnorm(1-0.05/2)
z
b1 = 0.1359
s1 = 0.1067
z = qnorm(1-0.05/2)
c(b1-s1*z, b1+s1*z)
c(exp(b1-s1*z), exp(b1+s1*z))
z = qnorm(1-0.05/2)
sqrt(0.1067)
0.1359/0.1067
logLik(logit)
logitR = glm(Y ~ 1, data = dat, family = "binomial")
logLik(logitR)
logitR = glm(Y/n ~ 1, data = dat, family = "binomial")
logLik(logitR)
L(R)= -4.158904
-2*(ln(-4.158904) - ln(-1.557684))
-2*(log(-4.158904) - log(-1.557684))
log(-4.158904)
-4.158904/-1.557684*2
qchisq(1-0.05, 2-1)
pchisq(5.339856, 1, lower.tail = FALSE)
dat = read.table("CH14PR14.txt")
names(dat) = c("Y", "X1", "X2", "X3")
logit = glm(Y ~ X1 + X2 + X3, data = dat, family = "binomial")
summary(logit)
0.43397/0.52179
logLik(logit)
logitR = glm(Y ~ X1+X2, data = dat, family = "binomial")
logLik(logitR)
-52.89769/-52.54659*-2
-52.89769+52.54659
-0.35118*-2
pchisq(0.70236, 1, lower.tail = FALSE)
-2*(-4.158904--1.557684)
logitF = glm(Y ~ X1+X2+I(X1^2)+I(X2^2)+I(X1*X2), data = dat, family = "binomial")
logLik(logitF)
logitR = glm(Y ~ X1+X2, data = dat, family = "binomial")
logLik(logitR)
-2*(-52.89769--52.13072)
qchisq(1-0.05, 6-3)
pchisq(1.53394, 3, lower.tail = FALSE)
dat = read.table("CH14PR14.txt")
names(dat) = c("Y", "X1", "X2", "X3")
logit = glm(Y ~ X1 + X2 + X3, data = dat, family = "binomial")
summary(logit)
dat = read.table("CH14PR11.txt")
names(dat) = c("X", "n", "Y")
logit = glm(Y/n ~ X, data = dat, family = "binomial")
Oj1 = logit$ret
Oj1
logit
Oj1 = dat$Y
fitted(logit)
Ej1 = round(dat$n*fitted(logit), 1)
Oj1 = dat$Y
Ej1 = round(dat$n*fitted(logit), 1)
Oj0 = dat$n-dat$Y
Ej0 = dat$n-Ej1
rbind(Oj1, Oj0)
X.squ = sum((rbind(Oj1, Oj0)-rbind(Ej1, Ej0))^2/rbind(Ej1, Ej0))
X.squ = sum((rbind(Oj1, Oj0)-rbind(Ej1, Ej0))^2/rbind(Ej1, Ej0));X.squ
dat.new = read.table("CH14PR14.txt")
names(dat.new) = c("y", "x1", "x2", "x3")
alpha = .1
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val[nrow(p.val), 4]
}
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ x1:x2),
wrap.foo(y ~ x1.2),
wrap.foo(y ~ x2.2),
wrap.foo(y ~ x1.2:x2.2))
scale(dat.new, scale = FALSE)
scale(dat.new, scale = FALSE)
dat = read.table("CH14PR14.txt")
names(dat) = c("y", "x1", "x2", "x3")
dat.new = scale(dat, scale = FALSE)
dat.new
wrap.foo(y ~ x1)
dat.new
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
}
wrap.foo(y ~ x1)
dat.new = as.data.frame(dat.new)
dat.new = as.data.frame(dat.new)
dat.new
wrap.foo(y ~ x1)
dat.new = scale(dat[, 2:4], scale = FALSE)
dat.new = scale(dat[, 2:4], scale = FALSE)
dat.new = as.data.frame(dat.new)
dat.new
dat.new = as.data.frame(dat$y, dat.new)
dat.new
dat.new = scale(dat[, 2:4], scale = FALSE)
dat.new = as.data.frame(dat$y, dat.new)
dat.new = as.data.frame(cbind(dat$y, dat.new))
dat.new
names(dat[1]) = "y"
dat
names(dat.new[1]) = "y"
dat.new
names(dat.new) = c("y", "x1", "x2", "x3")
dat.new
wrap.foo(y ~ x1)
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ x1:x2),
wrap.foo(y ~ x1.2),
wrap.foo(y ~ x2.2),
wrap.foo(y ~ x1.2:x2.2))
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ x1:x2),
wrap.foo(y ~ x1^2),
wrap.foo(y ~ x2^2),
wrap.foo(y ~ x1^2:x2^2))
Q
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ x1:x2),
wrap.foo(y ~ x1^2),
wrap.foo(y ~ x2^2),
wrap.foo(y ~ x1^2:x2^2))
any(tmp < alpha)
which.min(tmp)
tmp
wrap.foo(y ~ x1)
wrap.foo(y ~ x2)
wrap.foo(y ~ x1:x2)
a = wrap.foo(y ~ x1)
a
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val[nrow(p.val), 4]
}
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ x1:x2),
wrap.foo(y ~ x1^2),
wrap.foo(y ~ x2^2),
wrap.foo(y ~ x1^2:x2^2))
any(tmp < alpha)
which.min(tmp)
tmp
a = wrap.foo(y ~ x1);a
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + x1:x2),
wrap.foo(y ~ x1 + x1^2),
wrap.foo(y ~ x1 + x2^2),
)
any(tmp < alpha)
which.min(tmp)
tmp = c(wrap.foo(y ~ x1 + x2 + x1:x2),
wrap.foo(y ~ x1 + x2 + x1^2),
wrap.foo(y ~ x1 + x2 + x2^2),
)
any(tmp < alpha)
which.min(tmp)
tmp
tmp = c(wrap.foo(y ~ x1 + x2 + x1:x2),
wrap.foo(y ~ x1 + x2 + x1^2),
wrap.foo(y ~ x1 + x2 + x2^2),
)
tmp
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + x1:x2),
wrap.foo(y ~ x1 + x1^2),
wrap.foo(y ~ x1 + x2^2),
)
wrap.foo(y ~ x1 + x2)
wrap.foo(y ~ x1 + x1:x2)
wrap.foo(y ~ x1 + x1^2)
wrap.foo(y ~ x1 + x2^2)
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + x1:x2),
wrap.foo(y ~ x1 + x1^2),
wrap.foo(y ~ x1 + x2^2),
)
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + x1:x2),
wrap.foo(y ~ x1 + x1^2),
wrap.foo(y ~ x1 + x2^2)
)
any(tmp < alpha)
which.min(tmp)
tmp = c(wrap.foo(y ~ x1 + x1^2 + x2),
wrap.foo(y ~ x1 + x1^2 + x1:x2),
wrap.foo(y ~ x1 + x1^2 + x2^2)
)
any(tmp < alpha)
which.min(tmp)
dat = read.table("CH14PR14.txt")
names(dat) = c("y", "x1", "x2", "x3")
dat.new = scale(dat[, 2:4], scale = FALSE)
dat.new = as.data.frame(cbind(dat$y, dat.new))
names(dat.new) = c("y", "x1", "x2", "x3")
alpha = .1
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val[nrow(p.val), 4]
}
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ x1:x2),
wrap.foo(y ~ x1^2),
wrap.foo(y ~ x2^2),
wrap.foo(y ~ x1^2:x2^2))
any(tmp < alpha)
which.min(tmp)
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + x1:x2),
wrap.foo(y ~ x1 + x1^2),
wrap.foo(y ~ x1 + x2^2)
)
any(tmp < alpha)
which.min(tmp)
wrap.foo(y ~ x1 + x1^2)
wrap.foo(y ~ x1 + x2)
wrap.foo(y ~ x1 + x2^2)
wrap.foo(y ~ x1 + x1^2)
dat
wrap.foo(y ~ x1 + I(x1^2))
wrap.foo(y ~ I(x1^2))
wrap.foo(y ~ (x1^2))
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ x1:x2),
wrap.foo(y ~ I(x1^2)),
wrap.foo(y ~ I(x2^2)),
wrap.foo(y ~ I(x1^2):I(x2^2)))
tmp
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ I(x1:x2)),
wrap.foo(y ~ I(x1^2)),
wrap.foo(y ~ I(x2^2)),
wrap.foo(y ~ I(x1^2):I(x2^2)))
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ I(x1*x2)),
wrap.foo(y ~ I(x1^2)),
wrap.foo(y ~ I(x2^2)),
wrap.foo(y ~ I(x1^2):I(x2^2)))
tmp = c(wrap.foo(y ~ x1),
wrap.foo(y ~ x2),
wrap.foo(y ~ I(x1*x2)),
wrap.foo(y ~ I(x1^2)),
wrap.foo(y ~ I(x2^2)),
wrap.foo(y ~ I(x1^2):I(x2^2)))
tmp
any(tmp < alpha)
which.min(tmp)
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + I(x1:x2)),
wrap.foo(y ~ x1 + I(x1^2)),
wrap.foo(y ~ x1 + I(x2^2))
)
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + (x1:x2)),
wrap.foo(y ~ x1 + I(x1^2)),
wrap.foo(y ~ x1 + I(x2^2))
)
tmp = c(wrap.foo(y ~ x1 + x2),
wrap.foo(y ~ x1 + (x1:x2)),
wrap.foo(y ~ x1 + I(x1^2)),
wrap.foo(y ~ x1 + I(x2^2))
)
tmp
any(tmp < alpha)
which.min(tmp)
tmp = c(wrap.foo(y ~ x1 + x2 + x1:x2),
wrap.foo(y ~ x1 + x2 + I(x1^2)),
wrap.foo(y ~ x1 + x2 + I(x2^2))
)
any(tmp < alpha)
which.min(tmp)
a = 1:3
a[-1]
a = 3:1
a[-1]
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val = p.val[-1]
which.max(p.val)
}
wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val = p.val[-1]
p.val
}
wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val[, 4]
p.val = p.val[-1, ]
p.val
}
wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val = p.val[, 4]
p.val = p.val[-1, ]
p.val
}
wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val = p.val[, 4]
p.val
}
wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
wrap.foo = function(formula, dat.new. = dat.new)
{
model = glm(formula, family = binomial, data = dat.new.)
p.val = summary(model)$coef
p.val = p.val[, 4]
p.val[-1]
}
wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
tmp = wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
any(tmp < alpha)
which.max(tmp)
tmp = wrap.foo(y ~ x1 + x2 + x1:x2 + I(x1^2) + I(x2^2))
any(tmp > alpha)
which.max(tmp)
tmp = wrap.foo(y ~ x1 + x2 + I(x1^2) + I(x2^2))
any(tmp > alpha)
which.max(tmp)
tmp
tmp = wrap.foo(y ~ x1 + x2 + I(x2^2))
any(tmp > alpha)
which.max(tmp)
tmp = wrap.foo(y ~ x1 + x2)
any(tmp > alpha)
which.max(tmp)
tmp = wrap.foo(y ~ x1 + x2 + I(x1*x2) + I(x1^2) + I(x2^2))
any(tmp > alpha)
which.max(tmp)
tmp = wrap.foo(y ~ x1 + x2 + I(x1*x2) + I(x1^2) + I(x2^2))
any(tmp > alpha)
which.max(tmp)
tmp
tmp = wrap.foo(y ~ x1 + x2 + I(x1*x2) + I(x2^2))
any(tmp > alpha)
which.max(tmp)
tmp = wrap.foo(y ~ x1 + x2 + I(x1*x2) + I(x1^2) + I(x2^2))
any(tmp > alpha)
which.max(tmp)
model = glm(y ~ x1 + x2 + I(x1*x2) + I(x1^2) + I(x2^2) + I(x1^2):I(x2^2),
family = binomial, data = dat.new)
step(model)
model = glm(y ~ x1 + x2 + I(x1*x2) + I(x1^2) + I(x2^2) + I(x1^2*x2^2),
family = binomial, data = dat.new)
step(model)
step(model, k = log(n))
step(model, k = log(n))
dat
step(model, k = log(159))
dat = read.table("CH14PR11.txt")
names(dat) = c("X", "n", "Y")
plot(dat$X, dat$Y/dat$n)
logit = glm(Y/n ~ X, data = dat, weight = n , family = "binomial")
summary(logit)
dat = read.table("CH14PR11.txt")
names(dat) = c("X", "n", "Y")
logit = glm(Y/n ~ X, weight=n, data = dat, family = "binomial")
summary(logit)
b1 = 0.1359
s1 = 0.004772
z = qnorm(1-0.05/2)
c(b1-s1*z, b1+s1*z)
c(b1-s1*z, b1+s1*z)
c(exp(b1-s1*z), exp(b1+s1*z))
0.1359/0.004772
logLik(logit)
logitR = glm(Y/n ~ 1, weight = n, data = dat, family = "binomial")
logLik(logitR)
-572.7044+1.557684
571.1467*2
pchisq(1142.293, 1, lower.tail = FALSE)
-2*(-572.7044--1.557684)
logLik(logit)
-2*(-572.7044--24.70937)
pchisq(1095.99, 1, lower.tail = FALSE)
